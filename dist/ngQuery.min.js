!function(){"use strict";angular.module("ngQuery",["ui.sortable","ui.bootstrap"])}(),function(){"use strict";function e(){function e(){var e={topLevelOperators:[{name:"AND"},{name:"OR"}],fields:[{identifier:"CFirstName",display:"Contact First Name",type:"text",validOperators:[{identifier:"equals",display:"=="},{identifier:"notequal",display:"!="},{identifier:"like",display:"like"}]},{identifier:"NoHandsets",display:"Number of Handsets",type:"number",validOperators:[{identifier:"equals",display:"=="},{identifier:"notequal",display:"!="},{identifier:"greaterthan",display:">"}],validEntries:[{identifier:1,display:"1"},{identifier:2,display:"2"}]}]};return e}var r={getOptions:e};return r}angular.module("ngQuery").factory("queryOptions",e)}(),function(){"use strict"}(),function(){"use strict";function e(){return{restrict:"E",templateUrl:"js/views/query-builder-view.html",scope:{onExecute:"&"},controller:"queryBuilder as ctrl"}}angular.module("ngQuery").directive("queryBuilder",e)}(),function(){"use strict";function e(e,r,t){function i(){var e=t.open({templateUrl:"js/widgets/saveModal/save-modal.html",controller:"saveModal as ctrl"});e.result.then(function(e){r.storeQuery(e,angular.copy(n.groups))},function(){})}var n=this;n.queryOptions=e.getOptions(),n.groups=[],n.savedQueries=r.getQueries(),n.clearQuery=function(){n.groups.length=0},n.saveQuery=function(){i()},n.restoreQuery=function(e){n.groups.length=0,angular.copy(e,n.groups)}}angular.module("ngQuery").controller("queryBuilder",e),e.$inject=["queryOptions","queryRepository","$modal"]}(),function(){"use strict";function e(e){return{restrict:"EA",templateUrl:"js/directives/ruleDirective/rule-view.html",scope:{queryOptions:"=",queryData:"=",onRemove:"&"},controller:"ruleDirectiveController as ctrl",link:function(r,t){angular.isArray(r.ctrl.model)&&(t.html("<rule-group class='nested-group' query-options='ctrl.queryOptions' rules='ctrl.model' on-remove='ctrl.onRemove()' is-nested='true'></rule-group>"),e(t.contents())(r))}}}angular.module("ngQuery").directive("rule",e),e.$inject=["$compile"]}(),function(){"use strict";function e(e){var r=this;r.queryOptions=e.queryOptions,r.model=e.queryData,r.onRemove=e.onRemove,r.availableOperators=[],r.validEntries=null,r.setAvailableOperators=function(){for(var e=0;e<r.queryOptions.fields.length;e++){var t=r.queryOptions.fields[e];if(t.identifier===r.model.selectedField){r.availableOperators=t.validOperators,r.validEntries=t.validEntries||null;break}}},r.setAvailableOperators(),r.isArray=angular.isArray}angular.module("ngQuery").controller("ruleDirectiveController",e),e.$inject=["$scope"]}(),function(){"use strict";function e(e){var r=this;r.queryOptions=e.queryOptions,r.rules=e.rules,r.onRemove=e.onRemove,r.isNested=e.isNested,r.selectedTopLevelOperator=r.queryOptions.topLevelOperators[0].name,r.setTopLevelOperator=function(e){r.selectedTopLevelOperator=e},r.addRule=function(){r.rules.push({})},r.removeRule=function(e){var t=r.rules.indexOf(e);r.rules.splice(t,1)},r.addGroup=function(){r.rules.push([{}])},r.removeGroup=function(e){if(e){var t=r.rules.indexOf(e);r.rules.splice(t,1)}}}angular.module("ngQuery").controller("ruleGroupDirectiveController",e),e.$inject=["$scope"]}(),function(){"use strict";function e(){return{restrict:"EA",templateUrl:"js/directives/ruleGroupDirective/rule-group-view.html",scope:{queryOptions:"=",rules:"=",isNested:"=",onRemove:"&"},controller:"ruleGroupDirectiveController as ctrl"}}angular.module("ngQuery").directive("ruleGroup",e)}(),function(){"use strict";function e(){var e={getQueries:r,storeQuery:t};return e}function r(){return i}function t(e,r){i.push({name:e,query:r})}angular.module("ngQuery").factory("queryRepository",e);var i=[]}(),function(){"use strict";function e(e){var r=this;r.queryName=new Date,r.save=function(){e.close(r.queryName)},r.cancel=function(){e.dismiss("cancel")}}angular.module("ngQuery").controller("saveModal",e),e.$inject=["$modalInstance"]}();
!function(){"use strict";angular.module("ngQuery",["ui.sortable","ui.bootstrap"])}(),function(){"use strict";function e(){function e(){var e={topLevelOperators:[{name:"AND"},{name:"OR"}],fields:[{identifier:"CFirstName",display:"Contact First Name",type:"text",validOperators:[{identifier:"equals",display:"=="},{identifier:"notequal",display:"!="},{identifier:"like",display:"like"}]},{identifier:"NoHandsets",display:"Number of Handsets",type:"number",validOperators:[{identifier:"equals",display:"=="},{identifier:"notequal",display:"!="},{identifier:"greaterthan",display:">"}],validEntries:[{identifier:1,display:"1"},{identifier:2,display:"2"}]}]};return e}var n={getOptions:e};return n}angular.module("ngQuery").factory("queryOptions",e)}(),function(){"use strict"}(),function(){"use strict";function e(){return{restrict:"E",templateUrl:"js/views/query-builder-view.html",scope:{onExecute:"&"},controller:"queryBuilder as ctrl"}}angular.module("ngQuery").directive("queryBuilder",e)}(),function(){"use strict";function e(e,n,t){function r(){var e=t.open({templateUrl:"js/widgets/saveModal/save-modal.html",controller:"saveModal as ctrl"});e.result.then(function(e){n.storeQuery(e,angular.copy(l.groups))},function(){})}var l=this;l.queryOptions=e.getOptions(),l.groups=[],l.savedQueries=n.getQueries(),l.clearQuery=function(){l.groups.length=0},l.saveQuery=function(){r()},l.restoreQuery=function(e){l.groups.length=0,angular.copy(e,l.groups)}}angular.module("ngQuery").controller("queryBuilder",e),e.$inject=["queryOptions","queryRepository","$modal"]}(),function(){"use strict";function e(e){return{restrict:"EA",templateUrl:"js/directives/ruleDirective/rule-view.html",scope:{queryOptions:"=",queryData:"=",onRemove:"&"},controller:"ruleDirectiveController as ctrl",link:function(n,t){angular.isArray(n.ctrl.model)&&(t.html("<rule-group class='nested-group' query-options='ctrl.queryOptions' rules='ctrl.model' on-remove='ctrl.onRemove()' is-nested='true'></rule-group>"),e(t.contents())(n))}}}angular.module("ngQuery").directive("rule",e),e.$inject=["$compile"]}(),function(){"use strict";function e(e){var n=this;n.queryOptions=e.queryOptions,n.model=e.queryData,n.onRemove=e.onRemove,n.availableOperators=[],n.validEntries=null,n.setAvailableOperators=function(){for(var e=0;e<n.queryOptions.fields.length;e++){var t=n.queryOptions.fields[e];if(t.identifier===n.model.selectedField){n.availableOperators=t.validOperators,n.validEntries=t.validEntries||null;break}}},n.setAvailableOperators(),n.isArray=angular.isArray}angular.module("ngQuery").controller("ruleDirectiveController",e),e.$inject=["$scope"]}(),function(){"use strict";function e(e){var n=this;n.queryOptions=e.queryOptions,n.rules=e.rules,n.onRemove=e.onRemove,n.isNested=e.isNested,n.selectedTopLevelOperator=n.queryOptions.topLevelOperators[0].name,n.setTopLevelOperator=function(e){n.selectedTopLevelOperator=e},n.addRule=function(){n.rules.push({})},n.removeRule=function(e){var t=n.rules.indexOf(e);n.rules.splice(t,1)},n.addGroup=function(){n.rules.push([{}])},n.removeGroup=function(e){if(e){var t=n.rules.indexOf(e);n.rules.splice(t,1)}}}angular.module("ngQuery").controller("ruleGroupDirectiveController",e),e.$inject=["$scope"]}(),function(){"use strict";function e(){return{restrict:"EA",templateUrl:"js/directives/ruleGroupDirective/rule-group-view.html",scope:{queryOptions:"=",rules:"=",isNested:"=",onRemove:"&"},controller:"ruleGroupDirectiveController as ctrl"}}angular.module("ngQuery").directive("ruleGroup",e)}(),function(){"use strict";function e(){var e={getQueries:n,storeQuery:t};return e}function n(){return r}function t(e,n){r.push({name:e,query:n})}angular.module("ngQuery").factory("queryRepository",e);var r=[]}(),function(){"use strict";function e(e){var n=this;n.queryName=new Date,n.save=function(){e.close(n.queryName)},n.cancel=function(){e.dismiss("cancel")}}angular.module("ngQuery").controller("saveModal",e),e.$inject=["$modalInstance"]}(),!function(){"use strict";angular.module("ngQuery",["ui.sortable","ui.bootstrap"])}(),function(){"use strict";function e(){function e(){var e={topLevelOperators:[{name:"AND"},{name:"OR"}],fields:[{identifier:"CFirstName",display:"Contact First Name",type:"text",validOperators:[{identifier:"equals",display:"=="},{identifier:"notequal",display:"!="},{identifier:"like",display:"like"}]},{identifier:"NoHandsets",display:"Number of Handsets",type:"number",validOperators:[{identifier:"equals",display:"=="},{identifier:"notequal",display:"!="},{identifier:"greaterthan",display:">"}],validEntries:[{identifier:1,display:"1"},{identifier:2,display:"2"}]}]};return e}var n={getOptions:e};return n}angular.module("ngQuery").factory("queryOptions",e)}(),function(){"use strict"}(),function(){"use strict";function e(){return{restrict:"E",templateUrl:"js/views/query-builder-view.html",scope:{onExecute:"&"},controller:"queryBuilder as ctrl"}}angular.module("ngQuery").directive("queryBuilder",e)}(),function(){"use strict";function e(e,n,t){function r(){var e=t.open({templateUrl:"js/widgets/saveModal/save-modal.html",controller:"saveModal as ctrl"});e.result.then(function(e){n.storeQuery(e,angular.copy(l.groups))},function(){})}var l=this;l.queryOptions=e.getOptions(),l.groups=[],l.savedQueries=n.getQueries(),l.clearQuery=function(){l.groups.length=0},l.saveQuery=function(){r()},l.restoreQuery=function(e){l.groups.length=0,angular.copy(e,l.groups)}}angular.module("ngQuery").controller("queryBuilder",e),e.$inject=["queryOptions","queryRepository","$modal"]}(),function(){"use strict";function e(e){return{restrict:"EA",templateUrl:"js/directives/ruleDirective/rule-view.html",scope:{queryOptions:"=",queryData:"=",onRemove:"&"},controller:"ruleDirectiveController as ctrl",link:function(n,t){angular.isArray(n.ctrl.model)&&(t.html("<rule-group class='nested-group' query-options='ctrl.queryOptions' rules='ctrl.model' on-remove='ctrl.onRemove()' is-nested='true'></rule-group>"),e(t.contents())(n))}}}angular.module("ngQuery").directive("rule",e),e.$inject=["$compile"]}(),function(){"use strict";function e(e){var n=this;n.queryOptions=e.queryOptions,n.model=e.queryData,n.onRemove=e.onRemove,n.availableOperators=[],n.validEntries=null,n.setAvailableOperators=function(){for(var e=0;e<n.queryOptions.fields.length;e++){var t=n.queryOptions.fields[e];if(t.identifier===n.model.selectedField){n.availableOperators=t.validOperators,n.validEntries=t.validEntries||null;break}}},n.setAvailableOperators(),n.isArray=angular.isArray}angular.module("ngQuery").controller("ruleDirectiveController",e),e.$inject=["$scope"]}(),function(){"use strict";function e(e){var n=this;n.queryOptions=e.queryOptions,n.rules=e.rules,n.onRemove=e.onRemove,n.isNested=e.isNested,n.selectedTopLevelOperator=n.queryOptions.topLevelOperators[0].name,n.setTopLevelOperator=function(e){n.selectedTopLevelOperator=e},n.addRule=function(){n.rules.push({})},n.removeRule=function(e){var t=n.rules.indexOf(e);n.rules.splice(t,1)},n.addGroup=function(){n.rules.push([{}])},n.removeGroup=function(e){if(e){var t=n.rules.indexOf(e);n.rules.splice(t,1)}}}angular.module("ngQuery").controller("ruleGroupDirectiveController",e),e.$inject=["$scope"]}(),function(){"use strict";function e(){return{restrict:"EA",templateUrl:"js/directives/ruleGroupDirective/rule-group-view.html",scope:{queryOptions:"=",rules:"=",isNested:"=",onRemove:"&"},controller:"ruleGroupDirectiveController as ctrl"}}angular.module("ngQuery").directive("ruleGroup",e)}(),function(){"use strict";function e(){var e={getQueries:n,storeQuery:t};return e}function n(){return r}function t(e,n){r.push({name:e,query:n})}angular.module("ngQuery").factory("queryRepository",e);var r=[]}(),function(){"use strict";function e(e){var n=this;n.queryName=new Date,n.save=function(){e.close(n.queryName)},n.cancel=function(){e.dismiss("cancel")}}angular.module("ngQuery").controller("saveModal",e),e.$inject=["$modalInstance"]}(),!function(){"use strict";angular.module("ngQuery",["ui.sortable","ui.bootstrap"])}(),function(){"use strict";function e(){function e(){var e={topLevelOperators:[{name:"AND"},{name:"OR"}],fields:[{identifier:"CFirstName",display:"Contact First Name",type:"text",validOperators:[{identifier:"equals",display:"=="},{identifier:"notequal",display:"!="},{identifier:"like",display:"like"}]},{identifier:"NoHandsets",display:"Number of Handsets",type:"number",validOperators:[{identifier:"equals",display:"=="},{identifier:"notequal",display:"!="},{identifier:"greaterthan",display:">"}],validEntries:[{identifier:1,display:"1"},{identifier:2,display:"2"}]}]};return e}var n={getOptions:e};return n}angular.module("ngQuery").factory("queryOptions",e)}(),function(){"use strict"}(),function(){"use strict";function e(){return{restrict:"E",templateUrl:"js/views/query-builder-view.html",scope:{onExecute:"&"},controller:"queryBuilder as ctrl"}}angular.module("ngQuery").directive("queryBuilder",e)}(),function(){"use strict";function e(e,n,t){function r(){var e=t.open({templateUrl:"js/widgets/saveModal/save-modal.html",controller:"saveModal as ctrl"});e.result.then(function(e){n.storeQuery(e,angular.copy(l.groups))},function(){})}var l=this;l.queryOptions=e.getOptions(),l.groups=[],l.savedQueries=n.getQueries(),l.clearQuery=function(){l.groups.length=0},l.saveQuery=function(){r()},l.restoreQuery=function(e){l.groups.length=0,angular.copy(e,l.groups)}}angular.module("ngQuery").controller("queryBuilder",e),e.$inject=["queryOptions","queryRepository","$modal"]}(),function(){"use strict";function e(e){return{restrict:"EA",templateUrl:"js/directives/ruleDirective/rule-view.html",scope:{queryOptions:"=",queryData:"=",onRemove:"&"},controller:"ruleDirectiveController as ctrl",link:function(n,t){angular.isArray(n.ctrl.model)&&(t.html("<rule-group class='nested-group' query-options='ctrl.queryOptions' rules='ctrl.model' on-remove='ctrl.onRemove()' is-nested='true'></rule-group>"),e(t.contents())(n))}}}angular.module("ngQuery").directive("rule",e),e.$inject=["$compile"]}(),function(){"use strict";function e(e){var n=this;n.queryOptions=e.queryOptions,n.model=e.queryData,n.onRemove=e.onRemove,n.availableOperators=[],n.validEntries=null,n.setAvailableOperators=function(){for(var e=0;e<n.queryOptions.fields.length;e++){var t=n.queryOptions.fields[e];if(t.identifier===n.model.selectedField){n.availableOperators=t.validOperators,n.validEntries=t.validEntries||null;break}}},n.setAvailableOperators(),n.isArray=angular.isArray}angular.module("ngQuery").controller("ruleDirectiveController",e),e.$inject=["$scope"]}(),function(){"use strict";function e(e){var n=this;n.queryOptions=e.queryOptions,n.rules=e.rules,n.onRemove=e.onRemove,n.isNested=e.isNested,n.selectedTopLevelOperator=n.queryOptions.topLevelOperators[0].name,n.setTopLevelOperator=function(e){n.selectedTopLevelOperator=e},n.addRule=function(){n.rules.push({})},n.removeRule=function(e){var t=n.rules.indexOf(e);n.rules.splice(t,1)},n.addGroup=function(){n.rules.push([{}])},n.removeGroup=function(e){if(e){var t=n.rules.indexOf(e);n.rules.splice(t,1)}}}angular.module("ngQuery").controller("ruleGroupDirectiveController",e),e.$inject=["$scope"]}(),function(){"use strict";function e(){return{restrict:"EA",templateUrl:"js/directives/ruleGroupDirective/rule-group-view.html",scope:{queryOptions:"=",rules:"=",isNested:"=",onRemove:"&"},controller:"ruleGroupDirectiveController as ctrl"}}angular.module("ngQuery").directive("ruleGroup",e)}(),function(){"use strict";function e(){var e={getQueries:n,storeQuery:t};return e}function n(){return r}function t(e,n){r.push({name:e,query:n})}angular.module("ngQuery").factory("queryRepository",e);var r=[]}(),function(){"use strict";function e(e){var n=this;n.queryName=new Date,n.save=function(){e.close(n.queryName)},n.cancel=function(){e.dismiss("cancel")}}angular.module("ngQuery").controller("saveModal",e),e.$inject=["$modalInstance"]}(),!function(){"use strict";angular.module("ngQuery",["ui.sortable","ui.bootstrap"])}(),function(){"use strict";function e(){function e(){var e={topLevelOperators:[{name:"AND"},{name:"OR"}],fields:[{identifier:"CFirstName",display:"Contact First Name",type:"text",validOperators:[{identifier:"equals",display:"=="},{identifier:"notequal",display:"!="},{identifier:"like",display:"like"}]},{identifier:"NoHandsets",display:"Number of Handsets",type:"number",validOperators:[{identifier:"equals",display:"=="},{identifier:"notequal",display:"!="},{identifier:"greaterthan",display:">"}],validEntries:[{identifier:1,display:"1"},{identifier:2,display:"2"}]}]};return e}var n={getOptions:e};return n}angular.module("ngQuery").factory("queryOptions",e)}(),function(){"use strict"}(),function(){"use strict";function e(){return{restrict:"E",templateUrl:"js/views/query-builder-view.html",scope:{onExecute:"&"},controller:"queryBuilder as ctrl"}}angular.module("ngQuery").directive("queryBuilder",e)}(),function(){"use strict";function e(e,n,t){function r(){var e=t.open({templateUrl:"js/widgets/saveModal/save-modal.html",controller:"saveModal as ctrl"});e.result.then(function(e){n.storeQuery(e,angular.copy(l.groups))},function(){})}var l=this;l.queryOptions=e.getOptions(),l.groups=[],l.savedQueries=n.getQueries(),l.clearQuery=function(){l.groups.length=0},l.saveQuery=function(){r()},l.restoreQuery=function(e){l.groups.length=0,angular.copy(e,l.groups)}}angular.module("ngQuery").controller("queryBuilder",e),e.$inject=["queryOptions","queryRepository","$modal"]}(),function(){"use strict";function e(e){return{restrict:"EA",templateUrl:"js/directives/ruleDirective/rule-view.html",scope:{queryOptions:"=",queryData:"=",onRemove:"&"},controller:"ruleDirectiveController as ctrl",link:function(n,t){angular.isArray(n.ctrl.model)&&(t.html("<rule-group class='nested-group' query-options='ctrl.queryOptions' rules='ctrl.model' on-remove='ctrl.onRemove()' is-nested='true'></rule-group>"),e(t.contents())(n))}}}angular.module("ngQuery").directive("rule",e),e.$inject=["$compile"]}(),function(){"use strict";function e(e){var n=this;n.queryOptions=e.queryOptions,n.model=e.queryData,n.onRemove=e.onRemove,n.availableOperators=[],n.validEntries=null,n.setAvailableOperators=function(){for(var e=0;e<n.queryOptions.fields.length;e++){var t=n.queryOptions.fields[e];if(t.identifier===n.model.selectedField){n.availableOperators=t.validOperators,n.validEntries=t.validEntries||null;break}}},n.setAvailableOperators(),n.isArray=angular.isArray}angular.module("ngQuery").controller("ruleDirectiveController",e),e.$inject=["$scope"]}(),function(){"use strict";function e(e){var n=this;n.queryOptions=e.queryOptions,n.rules=e.rules,n.onRemove=e.onRemove,n.isNested=e.isNested,n.selectedTopLevelOperator=n.queryOptions.topLevelOperators[0].name,n.setTopLevelOperator=function(e){n.selectedTopLevelOperator=e},n.addRule=function(){n.rules.push({})},n.removeRule=function(e){var t=n.rules.indexOf(e);n.rules.splice(t,1)},n.addGroup=function(){n.rules.push([{}])},n.removeGroup=function(e){if(e){var t=n.rules.indexOf(e);n.rules.splice(t,1)}}}angular.module("ngQuery").controller("ruleGroupDirectiveController",e),e.$inject=["$scope"]}(),function(){"use strict";function e(){return{restrict:"EA",templateUrl:"js/directives/ruleGroupDirective/rule-group-view.html",scope:{queryOptions:"=",rules:"=",isNested:"=",onRemove:"&"},controller:"ruleGroupDirectiveController as ctrl"}}angular.module("ngQuery").directive("ruleGroup",e)}(),function(){"use strict";function e(){var e={getQueries:n,storeQuery:t};return e}function n(){return r}function t(e,n){r.push({name:e,query:n})}angular.module("ngQuery").factory("queryRepository",e);var r=[]}(),function(){"use strict";function e(e){var n=this;n.queryName=new Date,n.save=function(){e.close(n.queryName)},n.cancel=function(){e.dismiss("cancel")}}angular.module("ngQuery").controller("saveModal",e),e.$inject=["$modalInstance"]}(),!function(){"use strict";angular.module("ngQuery",["ui.sortable","ui.bootstrap"])}(),function(){"use strict";function e(){function e(){var e={topLevelOperators:[{name:"AND"},{name:"OR"}],fields:[{identifier:"CFirstName",display:"Contact First Name",type:"text",validOperators:[{identifier:"equals",display:"=="},{identifier:"notequal",display:"!="},{identifier:"like",display:"like"}]},{identifier:"NoHandsets",display:"Number of Handsets",type:"number",validOperators:[{identifier:"equals",display:"=="},{identifier:"notequal",display:"!="},{identifier:"greaterthan",display:">"}],validEntries:[{identifier:1,display:"1"},{identifier:2,display:"2"}]}]};return e}var n={getOptions:e};return n}angular.module("ngQuery").factory("queryOptions",e)}(),function(){"use strict"}(),function(){"use strict";function e(){return{restrict:"E",templateUrl:"js/views/query-builder-view.html",scope:{onExecute:"&"},controller:"queryBuilder as ctrl"}}angular.module("ngQuery").directive("queryBuilder",e)}(),function(){"use strict";function e(e,n,t){function r(){var e=t.open({templateUrl:"js/widgets/saveModal/save-modal.html",controller:"saveModal as ctrl"});e.result.then(function(e){n.storeQuery(e,angular.copy(l.groups))},function(){})}var l=this;l.queryOptions=e.getOptions(),l.groups=[],l.savedQueries=n.getQueries(),l.clearQuery=function(){l.groups.length=0},l.saveQuery=function(){r()},l.restoreQuery=function(e){l.groups.length=0,angular.copy(e,l.groups)}}angular.module("ngQuery").controller("queryBuilder",e),e.$inject=["queryOptions","queryRepository","$modal"]}(),function(){"use strict";function e(e){return{restrict:"EA",templateUrl:"js/directives/ruleDirective/rule-view.html",scope:{queryOptions:"=",queryData:"=",onRemove:"&"},controller:"ruleDirectiveController as ctrl",link:function(n,t){angular.isArray(n.ctrl.model)&&(t.html("<rule-group class='nested-group' query-options='ctrl.queryOptions' rules='ctrl.model' on-remove='ctrl.onRemove()' is-nested='true'></rule-group>"),e(t.contents())(n))}}}angular.module("ngQuery").directive("rule",e),e.$inject=["$compile"]}(),function(){"use strict";function e(e){var n=this;n.queryOptions=e.queryOptions,n.model=e.queryData,n.onRemove=e.onRemove,n.availableOperators=[],n.validEntries=null,n.setAvailableOperators=function(){for(var e=0;e<n.queryOptions.fields.length;e++){var t=n.queryOptions.fields[e];if(t.identifier===n.model.selectedField){n.availableOperators=t.validOperators,n.validEntries=t.validEntries||null;break}}},n.setAvailableOperators(),n.isArray=angular.isArray}angular.module("ngQuery").controller("ruleDirectiveController",e),e.$inject=["$scope"]}(),function(){"use strict";function e(e){var n=this;n.queryOptions=e.queryOptions,n.rules=e.rules,n.onRemove=e.onRemove,n.isNested=e.isNested,n.selectedTopLevelOperator=n.queryOptions.topLevelOperators[0].name,n.setTopLevelOperator=function(e){n.selectedTopLevelOperator=e},n.addRule=function(){n.rules.push({})},n.removeRule=function(e){var t=n.rules.indexOf(e);n.rules.splice(t,1)},n.addGroup=function(){n.rules.push([{}])},n.removeGroup=function(e){if(e){var t=n.rules.indexOf(e);n.rules.splice(t,1)}}}angular.module("ngQuery").controller("ruleGroupDirectiveController",e),e.$inject=["$scope"]}(),function(){"use strict";function e(){return{restrict:"EA",templateUrl:"js/directives/ruleGroupDirective/rule-group-view.html",scope:{queryOptions:"=",rules:"=",isNested:"=",onRemove:"&"},controller:"ruleGroupDirectiveController as ctrl"}}angular.module("ngQuery").directive("ruleGroup",e)}(),function(){"use strict";function e(){var e={getQueries:n,storeQuery:t};return e}function n(){return r}function t(e,n){r.push({name:e,query:n})}angular.module("ngQuery").factory("queryRepository",e);var r=[]}(),function(){"use strict";function e(e){var n=this;n.queryName=new Date,n.save=function(){e.close(n.queryName)},n.cancel=function(){e.dismiss("cancel")}}angular.module("ngQuery").controller("saveModal",e),e.$inject=["$modalInstance"]}(),!function(){"use strict";angular.module("ngQuery",["ui.sortable","ui.bootstrap"])}(),function(){"use strict";function e(){function e(){var e={topLevelOperators:[{name:"AND"},{name:"OR"}],fields:[{identifier:"CFirstName",display:"Contact First Name",type:"text",validOperators:[{identifier:"equals",display:"=="},{identifier:"notequal",display:"!="},{identifier:"like",display:"like"}]},{identifier:"NoHandsets",display:"Number of Handsets",type:"number",validOperators:[{identifier:"equals",display:"=="},{identifier:"notequal",display:"!="},{identifier:"greaterthan",display:">"}],validEntries:[{identifier:1,display:"1"},{identifier:2,display:"2"}]}]};return e}var n={getOptions:e};return n}angular.module("ngQuery").factory("queryOptions",e)}(),function(){"use strict"}(),function(){"use strict";function e(){return{restrict:"E",templateUrl:"js/views/query-builder-view.html",scope:{onExecute:"&"},controller:"queryBuilder as ctrl"}}angular.module("ngQuery").directive("queryBuilder",e)}(),function(){"use strict";function e(e,n,t){function r(){var e=t.open({templateUrl:"js/widgets/saveModal/save-modal.html",controller:"saveModal as ctrl"});e.result.then(function(e){n.storeQuery(e,angular.copy(l.groups))},function(){})}var l=this;l.queryOptions=e.getOptions(),l.groups=[],l.savedQueries=n.getQueries(),l.clearQuery=function(){l.groups.length=0},l.saveQuery=function(){r()},l.restoreQuery=function(e){l.groups.length=0,angular.copy(e,l.groups)}}angular.module("ngQuery").controller("queryBuilder",e),e.$inject=["queryOptions","queryRepository","$modal"]}(),function(){"use strict";function e(e){return{restrict:"EA",templateUrl:"js/directives/ruleDirective/rule-view.html",scope:{queryOptions:"=",queryData:"=",onRemove:"&"},controller:"ruleDirectiveController as ctrl",link:function(n,t){angular.isArray(n.ctrl.model)&&(t.html("<rule-group class='nested-group' query-options='ctrl.queryOptions' rules='ctrl.model' on-remove='ctrl.onRemove()' is-nested='true'></rule-group>"),e(t.contents())(n))}}}angular.module("ngQuery").directive("rule",e),e.$inject=["$compile"]}(),function(){"use strict";function e(e){var n=this;n.queryOptions=e.queryOptions,n.model=e.queryData,n.onRemove=e.onRemove,n.availableOperators=[],n.validEntries=null,n.setAvailableOperators=function(){for(var e=0;e<n.queryOptions.fields.length;e++){var t=n.queryOptions.fields[e];if(t.identifier===n.model.selectedField){n.availableOperators=t.validOperators,n.validEntries=t.validEntries||null;break}}},n.setAvailableOperators(),n.isArray=angular.isArray}angular.module("ngQuery").controller("ruleDirectiveController",e),e.$inject=["$scope"]}(),function(){"use strict";function e(e){var n=this;n.queryOptions=e.queryOptions,n.rules=e.rules,n.onRemove=e.onRemove,n.isNested=e.isNested,n.selectedTopLevelOperator=n.queryOptions.topLevelOperators[0].name,n.setTopLevelOperator=function(e){n.selectedTopLevelOperator=e},n.addRule=function(){n.rules.push({})},n.removeRule=function(e){var t=n.rules.indexOf(e);n.rules.splice(t,1)},n.addGroup=function(){n.rules.push([{}])},n.removeGroup=function(e){if(e){var t=n.rules.indexOf(e);n.rules.splice(t,1)}}}angular.module("ngQuery").controller("ruleGroupDirectiveController",e),e.$inject=["$scope"]}(),function(){"use strict";function e(){return{restrict:"EA",templateUrl:"js/directives/ruleGroupDirective/rule-group-view.html",scope:{queryOptions:"=",rules:"=",isNested:"=",onRemove:"&"},controller:"ruleGroupDirectiveController as ctrl"}}angular.module("ngQuery").directive("ruleGroup",e)}(),function(){"use strict";function e(){var e={getQueries:n,storeQuery:t};return e}function n(){return r}function t(e,n){r.push({name:e,query:n})}angular.module("ngQuery").factory("queryRepository",e);var r=[]}(),function(){"use strict";function e(e){var n=this;n.queryName=new Date,n.save=function(){e.close(n.queryName)},n.cancel=function(){e.dismiss("cancel")}}angular.module("ngQuery").controller("saveModal",e),e.$inject=["$modalInstance"]}(),!function(){"use strict";angular.module("ngQuery",["ui.sortable","ui.bootstrap"])}(),function(){"use strict";function e(){function e(){var e={topLevelOperators:[{name:"AND"},{name:"OR"}],fields:[{identifier:"CFirstName",display:"Contact First Name",type:"text",validOperators:[{identifier:"equals",display:"=="},{identifier:"notequal",display:"!="},{identifier:"like",display:"like"}]},{identifier:"NoHandsets",display:"Number of Handsets",type:"number",validOperators:[{identifier:"equals",display:"=="},{identifier:"notequal",display:"!="},{identifier:"greaterthan",display:">"}],validEntries:[{identifier:1,display:"1"},{identifier:2,display:"2"}]}]};return e}var n={getOptions:e};return n}angular.module("ngQuery").factory("queryOptions",e)}(),function(){"use strict"}(),function(){"use strict";function e(){return{restrict:"E",templateUrl:"js/views/query-builder-view.html",scope:{onExecute:"&"},controller:"queryBuilder as ctrl"}}angular.module("ngQuery").directive("queryBuilder",e)}(),function(){"use strict";function e(e,n,t){function r(){var e=t.open({templateUrl:"js/widgets/saveModal/save-modal.html",controller:"saveModal as ctrl"});e.result.then(function(e){n.storeQuery(e,angular.copy(l.groups))},function(){})}var l=this;l.queryOptions=e.getOptions(),l.groups=[],l.savedQueries=n.getQueries(),l.clearQuery=function(){l.groups.length=0},l.saveQuery=function(){r()},l.restoreQuery=function(e){l.groups.length=0,angular.copy(e,l.groups)}}angular.module("ngQuery").controller("queryBuilder",e),e.$inject=["queryOptions","queryRepository","$modal"]}(),function(){"use strict";function e(e){return{restrict:"EA",templateUrl:"js/directives/ruleDirective/rule-view.html",scope:{queryOptions:"=",queryData:"=",onRemove:"&"},controller:"ruleDirectiveController as ctrl",link:function(n,t){angular.isArray(n.ctrl.model)&&(t.html("<rule-group class='nested-group' query-options='ctrl.queryOptions' rules='ctrl.model' on-remove='ctrl.onRemove()' is-nested='true'></rule-group>"),e(t.contents())(n))}}}angular.module("ngQuery").directive("rule",e),e.$inject=["$compile"]}(),function(){"use strict";function e(e){var n=this;n.queryOptions=e.queryOptions,n.model=e.queryData,n.onRemove=e.onRemove,n.availableOperators=[],n.validEntries=null,n.setAvailableOperators=function(){for(var e=0;e<n.queryOptions.fields.length;e++){var t=n.queryOptions.fields[e];if(t.identifier===n.model.selectedField){n.availableOperators=t.validOperators,n.validEntries=t.validEntries||null;break}}},n.setAvailableOperators(),n.isArray=angular.isArray}angular.module("ngQuery").controller("ruleDirectiveController",e),e.$inject=["$scope"]}(),function(){"use strict";function e(e){var n=this;n.queryOptions=e.queryOptions,n.rules=e.rules,n.onRemove=e.onRemove,n.isNested=e.isNested,n.selectedTopLevelOperator=n.queryOptions.topLevelOperators[0].name,n.setTopLevelOperator=function(e){n.selectedTopLevelOperator=e},n.addRule=function(){n.rules.push({})},n.removeRule=function(e){var t=n.rules.indexOf(e);n.rules.splice(t,1)},n.addGroup=function(){n.rules.push([{}])},n.removeGroup=function(e){if(e){var t=n.rules.indexOf(e);n.rules.splice(t,1)}}}angular.module("ngQuery").controller("ruleGroupDirectiveController",e),e.$inject=["$scope"]}(),function(){"use strict";function e(){return{restrict:"EA",templateUrl:"js/directives/ruleGroupDirective/rule-group-view.html",scope:{queryOptions:"=",rules:"=",isNested:"=",onRemove:"&"},controller:"ruleGroupDirectiveController as ctrl"}}angular.module("ngQuery").directive("ruleGroup",e)}(),function(){"use strict";function e(){var e={getQueries:n,storeQuery:t};return e}function n(){return r}function t(e,n){r.push({name:e,query:n})}angular.module("ngQuery").factory("queryRepository",e);var r=[]}(),function(){"use strict";function e(e){var n=this;n.queryName=new Date,n.save=function(){e.close(n.queryName)},n.cancel=function(){e.dismiss("cancel")}}angular.module("ngQuery").controller("saveModal",e),e.$inject=["$modalInstance"]}(),!function(){"use strict";angular.module("ngQuery",["ui.sortable","ui.bootstrap"])}(),function(){"use strict";function e(){function e(){var e={topLevelOperators:[{name:"AND"},{name:"OR"}],fields:[{identifier:"CFirstName",display:"Contact First Name",type:"text",validOperators:[{identifier:"equals",display:"=="},{identifier:"notequal",display:"!="},{identifier:"like",display:"like"}]},{identifier:"NoHandsets",display:"Number of Handsets",type:"number",validOperators:[{identifier:"equals",display:"=="},{identifier:"notequal",display:"!="},{identifier:"greaterthan",display:">"}],validEntries:[{identifier:1,display:"1"},{identifier:2,display:"2"}]}]};return e}var n={getOptions:e};return n}angular.module("ngQuery").factory("queryOptions",e)}(),function(){"use strict"}(),function(){"use strict";function e(){return{restrict:"E",templateUrl:"js/views/query-builder-view.html",scope:{onExecute:"&"},controller:"queryBuilder as ctrl"}}angular.module("ngQuery").directive("queryBuilder",e)}(),function(){"use strict";function e(e,n,t){function r(){var e=t.open({templateUrl:"js/widgets/saveModal/save-modal.html",controller:"saveModal as ctrl"});e.result.then(function(e){n.storeQuery(e,angular.copy(l.groups))},function(){})}var l=this;l.queryOptions=e.getOptions(),l.groups=[],l.savedQueries=n.getQueries(),l.clearQuery=function(){l.groups.length=0},l.saveQuery=function(){r()},l.restoreQuery=function(e){l.groups.length=0,angular.copy(e,l.groups)}}angular.module("ngQuery").controller("queryBuilder",e),e.$inject=["queryOptions","queryRepository","$modal"]}(),function(){"use strict";function e(e){return{restrict:"EA",templateUrl:"js/directives/ruleDirective/rule-view.html",scope:{queryOptions:"=",queryData:"=",onRemove:"&"},controller:"ruleDirectiveController as ctrl",link:function(n,t){angular.isArray(n.ctrl.model)&&(t.html("<rule-group class='nested-group' query-options='ctrl.queryOptions' rules='ctrl.model' on-remove='ctrl.onRemove()' is-nested='true'></rule-group>"),e(t.contents())(n))}}}angular.module("ngQuery").directive("rule",e),e.$inject=["$compile"]}(),function(){"use strict";function e(e){var n=this;n.queryOptions=e.queryOptions,n.model=e.queryData,n.onRemove=e.onRemove,n.availableOperators=[],n.validEntries=null,n.setAvailableOperators=function(){for(var e=0;e<n.queryOptions.fields.length;e++){var t=n.queryOptions.fields[e];if(t.identifier===n.model.selectedField){n.availableOperators=t.validOperators,n.validEntries=t.validEntries||null;break}}},n.setAvailableOperators(),n.isArray=angular.isArray}angular.module("ngQuery").controller("ruleDirectiveController",e),e.$inject=["$scope"]}(),function(){"use strict";function e(e){var n=this;n.queryOptions=e.queryOptions,n.rules=e.rules,n.onRemove=e.onRemove,n.isNested=e.isNested,n.selectedTopLevelOperator=n.queryOptions.topLevelOperators[0].name,n.setTopLevelOperator=function(e){n.selectedTopLevelOperator=e},n.addRule=function(){n.rules.push({})},n.removeRule=function(e){var t=n.rules.indexOf(e);n.rules.splice(t,1)},n.addGroup=function(){n.rules.push([{}])},n.removeGroup=function(e){if(e){var t=n.rules.indexOf(e);n.rules.splice(t,1)}}}angular.module("ngQuery").controller("ruleGroupDirectiveController",e),e.$inject=["$scope"]}(),function(){"use strict";function e(){return{restrict:"EA",templateUrl:"js/directives/ruleGroupDirective/rule-group-view.html",scope:{queryOptions:"=",rules:"=",isNested:"=",onRemove:"&"},controller:"ruleGroupDirectiveController as ctrl"}}angular.module("ngQuery").directive("ruleGroup",e)}(),function(){"use strict";function e(){var e={getQueries:n,storeQuery:t};return e}function n(){return r}function t(e,n){r.push({name:e,query:n})}angular.module("ngQuery").factory("queryRepository",e);var r=[]}(),function(){"use strict";function e(e){var n=this;n.queryName=new Date,n.save=function(){e.close(n.queryName)},n.cancel=function(){e.dismiss("cancel")}}angular.module("ngQuery").controller("saveModal",e),e.$inject=["$modalInstance"]}(),!function(){"use strict";angular.module("ngQuery",["ui.sortable","ui.bootstrap"])}(),function(){"use strict";function e(){function e(){var e={topLevelOperators:[{name:"AND"},{name:"OR"}],fields:[{identifier:"CFirstName",display:"Contact First Name",type:"text",validOperators:[{identifier:"equals",display:"=="},{identifier:"notequal",display:"!="},{identifier:"like",
display:"like"}]},{identifier:"NoHandsets",display:"Number of Handsets",type:"number",validOperators:[{identifier:"equals",display:"=="},{identifier:"notequal",display:"!="},{identifier:"greaterthan",display:">"}],validEntries:[{identifier:1,display:"1"},{identifier:2,display:"2"}]}]};return e}var n={getOptions:e};return n}angular.module("ngQuery").factory("queryOptions",e)}(),function(){"use strict"}(),function(){"use strict";function e(){return{restrict:"E",templateUrl:"js/views/query-builder-view.html",scope:{onExecute:"&"},controller:"queryBuilder as ctrl"}}angular.module("ngQuery").directive("queryBuilder",e)}(),function(){"use strict";function e(e,n,t){function r(){var e=t.open({templateUrl:"js/widgets/saveModal/save-modal.html",controller:"saveModal as ctrl"});e.result.then(function(e){n.storeQuery(e,angular.copy(l.groups))},function(){})}var l=this;l.queryOptions=e.getOptions(),l.groups=[],l.savedQueries=n.getQueries(),l.clearQuery=function(){l.groups.length=0},l.saveQuery=function(){r()},l.restoreQuery=function(e){l.groups.length=0,angular.copy(e,l.groups)}}angular.module("ngQuery").controller("queryBuilder",e),e.$inject=["queryOptions","queryRepository","$modal"]}(),function(){"use strict";function e(e){return{restrict:"EA",templateUrl:"js/directives/ruleDirective/rule-view.html",scope:{queryOptions:"=",queryData:"=",onRemove:"&"},controller:"ruleDirectiveController as ctrl",link:function(n,t){angular.isArray(n.ctrl.model)&&(t.html("<rule-group class='nested-group' query-options='ctrl.queryOptions' rules='ctrl.model' on-remove='ctrl.onRemove()' is-nested='true'></rule-group>"),e(t.contents())(n))}}}angular.module("ngQuery").directive("rule",e),e.$inject=["$compile"]}(),function(){"use strict";function e(e){var n=this;n.queryOptions=e.queryOptions,n.model=e.queryData,n.onRemove=e.onRemove,n.availableOperators=[],n.validEntries=null,n.setAvailableOperators=function(){for(var e=0;e<n.queryOptions.fields.length;e++){var t=n.queryOptions.fields[e];if(t.identifier===n.model.selectedField){n.availableOperators=t.validOperators,n.validEntries=t.validEntries||null;break}}},n.setAvailableOperators(),n.isArray=angular.isArray}angular.module("ngQuery").controller("ruleDirectiveController",e),e.$inject=["$scope"]}(),function(){"use strict";function e(e){var n=this;n.queryOptions=e.queryOptions,n.rules=e.rules,n.onRemove=e.onRemove,n.isNested=e.isNested,n.selectedTopLevelOperator=n.queryOptions.topLevelOperators[0].name,n.setTopLevelOperator=function(e){n.selectedTopLevelOperator=e},n.addRule=function(){n.rules.push({})},n.removeRule=function(e){var t=n.rules.indexOf(e);n.rules.splice(t,1)},n.addGroup=function(){n.rules.push([{}])},n.removeGroup=function(e){if(e){var t=n.rules.indexOf(e);n.rules.splice(t,1)}}}angular.module("ngQuery").controller("ruleGroupDirectiveController",e),e.$inject=["$scope"]}(),function(){"use strict";function e(){return{restrict:"EA",templateUrl:"js/directives/ruleGroupDirective/rule-group-view.html",scope:{queryOptions:"=",rules:"=",isNested:"=",onRemove:"&"},controller:"ruleGroupDirectiveController as ctrl"}}angular.module("ngQuery").directive("ruleGroup",e)}(),function(){"use strict";function e(){var e={getQueries:n,storeQuery:t};return e}function n(){return r}function t(e,n){r.push({name:e,query:n})}angular.module("ngQuery").factory("queryRepository",e);var r=[]}(),function(){"use strict";function e(e){var n=this;n.queryName=new Date,n.save=function(){e.close(n.queryName)},n.cancel=function(){e.dismiss("cancel")}}angular.module("ngQuery").controller("saveModal",e),e.$inject=["$modalInstance"]}(),!function(){"use strict";angular.module("ngQuery",["ui.sortable","ui.bootstrap"])}(),function(){"use strict";function e(){function e(){var e={topLevelOperators:[{name:"AND"},{name:"OR"}],fields:[{identifier:"CFirstName",display:"Contact First Name",type:"text",validOperators:[{identifier:"equals",display:"=="},{identifier:"notequal",display:"!="},{identifier:"like",display:"like"}]},{identifier:"NoHandsets",display:"Number of Handsets",type:"number",validOperators:[{identifier:"equals",display:"=="},{identifier:"notequal",display:"!="},{identifier:"greaterthan",display:">"}],validEntries:[{identifier:1,display:"1"},{identifier:2,display:"2"}]}]};return e}var n={getOptions:e};return n}angular.module("ngQuery").factory("queryOptions",e)}(),function(){"use strict"}(),function(){"use strict";function e(){return{restrict:"E",templateUrl:"js/views/query-builder-view.html",scope:{onExecute:"&"},controller:"queryBuilder as ctrl"}}angular.module("ngQuery").directive("queryBuilder",e)}(),function(){"use strict";function e(e,n,t){function r(){var e=t.open({templateUrl:"js/widgets/saveModal/save-modal.html",controller:"saveModal as ctrl"});e.result.then(function(e){n.storeQuery(e,angular.copy(l.groups))},function(){})}var l=this;l.queryOptions=e.getOptions(),l.groups=[],l.savedQueries=n.getQueries(),l.clearQuery=function(){l.groups.length=0},l.saveQuery=function(){r()},l.restoreQuery=function(e){l.groups.length=0,angular.copy(e,l.groups)}}angular.module("ngQuery").controller("queryBuilder",e),e.$inject=["queryOptions","queryRepository","$modal"]}(),function(){"use strict";function e(e){return{restrict:"EA",templateUrl:"js/directives/ruleDirective/rule-view.html",scope:{queryOptions:"=",queryData:"=",onRemove:"&"},controller:"ruleDirectiveController as ctrl",link:function(n,t){angular.isArray(n.ctrl.model)&&(t.html("<rule-group class='nested-group' query-options='ctrl.queryOptions' rules='ctrl.model' on-remove='ctrl.onRemove()' is-nested='true'></rule-group>"),e(t.contents())(n))}}}angular.module("ngQuery").directive("rule",e),e.$inject=["$compile"]}(),function(){"use strict";function e(e){var n=this;n.queryOptions=e.queryOptions,n.model=e.queryData,n.onRemove=e.onRemove,n.availableOperators=[],n.validEntries=null,n.setAvailableOperators=function(){for(var e=0;e<n.queryOptions.fields.length;e++){var t=n.queryOptions.fields[e];if(t.identifier===n.model.selectedField){n.availableOperators=t.validOperators,n.validEntries=t.validEntries||null;break}}},n.setAvailableOperators(),n.isArray=angular.isArray}angular.module("ngQuery").controller("ruleDirectiveController",e),e.$inject=["$scope"]}(),function(){"use strict";function e(e){var n=this;n.queryOptions=e.queryOptions,n.rules=e.rules,n.onRemove=e.onRemove,n.isNested=e.isNested,n.selectedTopLevelOperator=n.queryOptions.topLevelOperators[0].name,n.setTopLevelOperator=function(e){n.selectedTopLevelOperator=e},n.addRule=function(){n.rules.push({})},n.removeRule=function(e){var t=n.rules.indexOf(e);n.rules.splice(t,1)},n.addGroup=function(){n.rules.push([{}])},n.removeGroup=function(e){if(e){var t=n.rules.indexOf(e);n.rules.splice(t,1)}}}angular.module("ngQuery").controller("ruleGroupDirectiveController",e),e.$inject=["$scope"]}(),function(){"use strict";function e(){return{restrict:"EA",templateUrl:"js/directives/ruleGroupDirective/rule-group-view.html",scope:{queryOptions:"=",rules:"=",isNested:"=",onRemove:"&"},controller:"ruleGroupDirectiveController as ctrl"}}angular.module("ngQuery").directive("ruleGroup",e)}(),function(){"use strict";function e(){var e={getQueries:n,storeQuery:t};return e}function n(){return r}function t(e,n){r.push({name:e,query:n})}angular.module("ngQuery").factory("queryRepository",e);var r=[]}(),function(){"use strict";function e(e){var n=this;n.queryName=new Date,n.save=function(){e.close(n.queryName)},n.cancel=function(){e.dismiss("cancel")}}angular.module("ngQuery").controller("saveModal",e),e.$inject=["$modalInstance"]}(),!function(){"use strict";angular.module("ngQuery",["ui.sortable","ui.bootstrap"])}(),function(){"use strict";function e(){function e(){var e={topLevelOperators:[{name:"AND"},{name:"OR"}],fields:[{identifier:"CFirstName",display:"Contact First Name",type:"text",validOperators:[{identifier:"equals",display:"=="},{identifier:"notequal",display:"!="},{identifier:"like",display:"like"}]},{identifier:"NoHandsets",display:"Number of Handsets",type:"number",validOperators:[{identifier:"equals",display:"=="},{identifier:"notequal",display:"!="},{identifier:"greaterthan",display:">"}],validEntries:[{identifier:1,display:"1"},{identifier:2,display:"2"}]}]};return e}var n={getOptions:e};return n}angular.module("ngQuery").factory("queryOptions",e)}(),function(){"use strict"}(),function(){"use strict";function e(){return{restrict:"E",templateUrl:"js/views/query-builder-view.html",scope:{onExecute:"&"},controller:"queryBuilder as ctrl"}}angular.module("ngQuery").directive("queryBuilder",e)}(),function(){"use strict";function e(e,n,t){function r(){var e=t.open({templateUrl:"js/widgets/saveModal/save-modal.html",controller:"saveModal as ctrl"});e.result.then(function(e){n.storeQuery(e,angular.copy(l.groups))},function(){})}var l=this;l.queryOptions=e.getOptions(),l.groups=[],l.savedQueries=n.getQueries(),l.clearQuery=function(){l.groups.length=0},l.saveQuery=function(){r()},l.restoreQuery=function(e){l.groups.length=0,angular.copy(e,l.groups)}}angular.module("ngQuery").controller("queryBuilder",e),e.$inject=["queryOptions","queryRepository","$modal"]}(),function(){"use strict";function e(e){return{restrict:"EA",templateUrl:"js/directives/ruleDirective/rule-view.html",scope:{queryOptions:"=",queryData:"=",onRemove:"&"},controller:"ruleDirectiveController as ctrl",link:function(n,t){angular.isArray(n.ctrl.model)&&(t.html("<rule-group class='nested-group' query-options='ctrl.queryOptions' rules='ctrl.model' on-remove='ctrl.onRemove()' is-nested='true'></rule-group>"),e(t.contents())(n))}}}angular.module("ngQuery").directive("rule",e),e.$inject=["$compile"]}(),function(){"use strict";function e(e){var n=this;n.queryOptions=e.queryOptions,n.model=e.queryData,n.onRemove=e.onRemove,n.availableOperators=[],n.validEntries=null,n.setAvailableOperators=function(){for(var e=0;e<n.queryOptions.fields.length;e++){var t=n.queryOptions.fields[e];if(t.identifier===n.model.selectedField){n.availableOperators=t.validOperators,n.validEntries=t.validEntries||null;break}}},n.setAvailableOperators(),n.isArray=angular.isArray}angular.module("ngQuery").controller("ruleDirectiveController",e),e.$inject=["$scope"]}(),function(){"use strict";function e(e){var n=this;n.queryOptions=e.queryOptions,n.rules=e.rules,n.onRemove=e.onRemove,n.isNested=e.isNested,n.selectedTopLevelOperator=n.queryOptions.topLevelOperators[0].name,n.setTopLevelOperator=function(e){n.selectedTopLevelOperator=e},n.addRule=function(){n.rules.push({})},n.removeRule=function(e){var t=n.rules.indexOf(e);n.rules.splice(t,1)},n.addGroup=function(){n.rules.push([{}])},n.removeGroup=function(e){if(e){var t=n.rules.indexOf(e);n.rules.splice(t,1)}}}angular.module("ngQuery").controller("ruleGroupDirectiveController",e),e.$inject=["$scope"]}(),function(){"use strict";function e(){return{restrict:"EA",templateUrl:"js/directives/ruleGroupDirective/rule-group-view.html",scope:{queryOptions:"=",rules:"=",isNested:"=",onRemove:"&"},controller:"ruleGroupDirectiveController as ctrl"}}angular.module("ngQuery").directive("ruleGroup",e)}(),function(){"use strict";function e(){var e={getQueries:n,storeQuery:t};return e}function n(){return r}function t(e,n){r.push({name:e,query:n})}angular.module("ngQuery").factory("queryRepository",e);var r=[]}(),function(){"use strict";function e(e){var n=this;n.queryName=new Date,n.save=function(){e.close(n.queryName)},n.cancel=function(){e.dismiss("cancel")}}angular.module("ngQuery").controller("saveModal",e),e.$inject=["$modalInstance"]}(),angular.module("ngQuery").run(["$templateCache",function(e){e.put("js/views/query-builder-view.html",'<div class="col-sm-9">\n  <rule-group query-options="ctrl.queryOptions" rules="ctrl.groups"></rule-group>\n\n  <button type="button" class="btn btn-warning" ng-click="ctrl.clearQuery()"\n          ng-disabled="ctrl.groups.length == 0">Clear Query</button>\n  <div class="btn-group pull-right" role="group">\n    <button type="button" class="btn btn-primary" ng-click="ctrl.saveQuery()"\n            ng-disabled="ctrl.groups.length == 0">Save Query</button>\n    <button type="button" class="btn btn-success"\n            ng-disabled="ctrl.groups.length == 0" ng-click="onExecute({data: ctrl.groups})">Exectute Query</button>\n  </div>\n</div>\n<div class="col-sm-3">\n  <div class="panel panel-info">\n    <div class="panel-heading">\n      <h3 class="panel-title">Saved Queries</h3>\n    </div>\n    <div class="panel-body">\n      <span ng-if="ctrl.savedQueries.length == 0">Nothing Saved.</span>\n      <div ng-repeat="save in ctrl.savedQueries">\n        <button type="button" class="btn btn-default btn-sm btn-block saved-query"\n                ng-click="ctrl.restoreQuery(save.query)">\n          {{ save.name }}\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n')}]),angular.module("ngQuery").run(["$templateCache",function(e){e.put("js/directives/ruleDirective/rule-view.html",'<div class="rule-container" ng-if="!ctrl.isArray(ctrl.model)">\n  <form class="form-inline" aria-hidden="true">\n\n    <select ng-model="ctrl.model.selectedField" class="form-control input-sm"\n            ng-change="ctrl.setAvailableOperators()"\n            ng-options="field.identifier as field.display for field in ctrl.queryOptions.fields">\n    </select>\n\n    <select ng-model="ctrl.model.selectedOperator" class="form-control input-sm"\n            ng-options="op.identifier as op.display for op in ctrl.availableOperators">\n    </select>\n\n    <input type="text" class="form-control input-sm" ng-if="!ctrl.validEntries"\n           ng-model="ctrl.model.selectEntry"></input>\n    <select ng-model="ctrl.model.selectEntry" class="form-control input-sm" ng-if="ctrl.validEntries"\n            ng-options="entry.identifier as entry.display for entry in ctrl.validEntries">\n    </select>\n\n    <button type="button" class="btn btn-danger btn-sm pull-right" ng-click="ctrl.onRemove()">\n      <i class="glyphicon glyphicon-trash"></i>\n    </button>\n  </form>\n</div>\n')}]),angular.module("ngQuery").run(["$templateCache",function(e){e.put("js/directives/ruleGroupDirective/query-builder-view.html",'<div class="col-sm-9">\n  <rule-group query-options="ctrl.queryOptions" rules="ctrl.groups"></rule-group>\n\n  <button type="button" class="btn btn-warning" ng-click="ctrl.clearQuery()"\n          ng-disabled="ctrl.groups.length == 0">Clear Query</button>\n  <div class="btn-group pull-right" role="group">\n    <button type="button" class="btn btn-primary" ng-click="ctrl.saveQuery()"\n            ng-disabled="ctrl.groups.length == 0">Save Query</button>\n    <button type="button" class="btn btn-success"\n            ng-disabled="ctrl.groups.length == 0">Exectute Query</button>\n  </div>\n</div>\n<div class="col-sm-3">\n  <div class="panel panel-info">\n    <div class="panel-heading">\n      <h3 class="panel-title">Saved Queries</h3>\n    </div>\n    <div class="panel-body">\n      <span ng-if="ctrl.savedQueries.length == 0">Nothing Saved.</span>\n      <div ng-repeat="save in ctrl.savedQueries">\n        <button type="button" class="btn btn-default btn-sm btn-block saved-query"\n                ng-click="ctrl.restoreQuery(save.query)">\n          {{ save.name }}\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n')}]),angular.module("ngQuery").run(["$templateCache",function(e){e.put("js/directives/ruleGroupDirective/rule-group-view.html",'<div class="rule-group-container">\n<div class="panel panel-default">\n  <div class="panel-body">\n    <div class="btn-group group-conditions" role="group">\n      <label ng-repeat="op in ctrl.queryOptions.topLevelOperators"\n             class="btn btn-xs btn-primary toggle-button"\n             ng-class="{\'active\': ctrl.selectedTopLevelOperator == op.name }">\n        <input name="{{op.name}}_cond" type="radio" value="{{op.name}}"\n               ng-click="ctrl.setTopLevelOperator(op.name)">\n          {{ op.name }}\n        </input>\n      </label>\n    </div>\n\n    <div class="btn-group pull-right group-actions">\n      <button type="button" class="btn btn-success btn-xs" ng-click="ctrl.addRule()">\n        <i class="glyphicon glyphicon-plus"></i>\n        Add Rule\n      </button>\n      <button type="button" class="btn btn-success btn-xs" ng-click="ctrl.addGroup()">\n        <i class="glyphicon glyphicon-log-in"></i>\n        Add Group\n      </button>\n      <button type="button" class="btn btn-danger btn-xs" ng-click="ctrl.onRemove()"\n              ng-show="ctrl.isNested">\n        <i class="glyphicon glyphicon-trash"></i>\n        Remove Group\n      </button>\n    </div>\n\n    <div class="rules-container" ui-sortable ng-model="ctrl.rules">\n      <div ng-repeat="rule in ctrl.rules">\n        <rule query-options="ctrl.queryOptions" query-data="rule"\n              on-remove="ctrl.removeRule(rule)" class="draggable sortable"></rule>\n      </div>\n    </div>\n  </div>\n</div>\n</div>\n')}]),angular.module("ngQuery").run(["$templateCache",function(e){e.put("js/widgets/saveModal/save-modal.html",'<div class="modal-header">\n  <h3 class="modal-title">Give your query a name...</h3>\n</div>\n<div class="modal-body">\n  <input type="text" class="form-control" ng-model="ctrl.queryName"></input>\n</div>\n<div class="modal-footer">\n  <button class="btn btn-primary" ng-click="ctrl.save()">Save</button>\n  <button class="btn btn-warning" ng-click="ctrl.cancel()">Cancel</button>\n</div>\n')}]),angular.module("ngQuery").run(["$templateCache",function(e){e.put("js/views/query-builder-view.html",'<div class="col-sm-9">\n  <rule-group query-options="ctrl.queryOptions" rules="ctrl.groups"></rule-group>\n\n  <button type="button" class="btn btn-warning" ng-click="ctrl.clearQuery()"\n          ng-disabled="ctrl.groups.length == 0">Clear Query</button>\n  <div class="btn-group pull-right" role="group">\n    <button type="button" class="btn btn-primary" ng-click="ctrl.saveQuery()"\n            ng-disabled="ctrl.groups.length == 0">Save Query</button>\n    <button type="button" class="btn btn-success"\n            ng-disabled="ctrl.groups.length == 0" ng-click="onExecute({data: ctrl.groups})">Exectute Query</button>\n  </div>\n</div>\n<div class="col-sm-3">\n  <div class="panel panel-info">\n    <div class="panel-heading">\n      <h3 class="panel-title">Saved Queries</h3>\n    </div>\n    <div class="panel-body">\n      <span ng-if="ctrl.savedQueries.length == 0">Nothing Saved.</span>\n      <div ng-repeat="save in ctrl.savedQueries">\n        <button type="button" class="btn btn-default btn-sm btn-block saved-query"\n                ng-click="ctrl.restoreQuery(save.query)">\n          {{ save.name }}\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n')}]),angular.module("ngQuery").run(["$templateCache",function(e){e.put("js/directives/ruleDirective/rule-view.html",'<div class="rule-container" ng-if="!ctrl.isArray(ctrl.model)">\n  <form class="form-inline" aria-hidden="true">\n\n    <select ng-model="ctrl.model.selectedField" class="form-control input-sm"\n            ng-change="ctrl.setAvailableOperators()"\n            ng-options="field.identifier as field.display for field in ctrl.queryOptions.fields">\n    </select>\n\n    <select ng-model="ctrl.model.selectedOperator" class="form-control input-sm"\n            ng-options="op.identifier as op.display for op in ctrl.availableOperators">\n    </select>\n\n    <input type="text" class="form-control input-sm" ng-if="!ctrl.validEntries"\n           ng-model="ctrl.model.selectEntry"></input>\n    <select ng-model="ctrl.model.selectEntry" class="form-control input-sm" ng-if="ctrl.validEntries"\n            ng-options="entry.identifier as entry.display for entry in ctrl.validEntries">\n    </select>\n\n    <button type="button" class="btn btn-danger btn-sm pull-right" ng-click="ctrl.onRemove()">\n      <i class="glyphicon glyphicon-trash"></i>\n    </button>\n  </form>\n</div>\n')}]),angular.module("ngQuery").run(["$templateCache",function(e){e.put("js/directives/ruleGroupDirective/query-builder-view.html",'<div class="col-sm-9">\n  <rule-group query-options="ctrl.queryOptions" rules="ctrl.groups"></rule-group>\n\n  <button type="button" class="btn btn-warning" ng-click="ctrl.clearQuery()"\n          ng-disabled="ctrl.groups.length == 0">Clear Query</button>\n  <div class="btn-group pull-right" role="group">\n    <button type="button" class="btn btn-primary" ng-click="ctrl.saveQuery()"\n            ng-disabled="ctrl.groups.length == 0">Save Query</button>\n    <button type="button" class="btn btn-success"\n            ng-disabled="ctrl.groups.length == 0">Exectute Query</button>\n  </div>\n</div>\n<div class="col-sm-3">\n  <div class="panel panel-info">\n    <div class="panel-heading">\n      <h3 class="panel-title">Saved Queries</h3>\n    </div>\n    <div class="panel-body">\n      <span ng-if="ctrl.savedQueries.length == 0">Nothing Saved.</span>\n      <div ng-repeat="save in ctrl.savedQueries">\n        <button type="button" class="btn btn-default btn-sm btn-block saved-query"\n                ng-click="ctrl.restoreQuery(save.query)">\n          {{ save.name }}\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n')}]),angular.module("ngQuery").run(["$templateCache",function(e){e.put("js/directives/ruleGroupDirective/rule-group-view.html",'<div class="rule-group-container">\n<div class="panel panel-default">\n  <div class="panel-body">\n    <div class="btn-group group-conditions" role="group">\n      <label ng-repeat="op in ctrl.queryOptions.topLevelOperators"\n             class="btn btn-xs btn-primary toggle-button"\n             ng-class="{\'active\': ctrl.selectedTopLevelOperator == op.name }">\n        <input name="{{op.name}}_cond" type="radio" value="{{op.name}}"\n               ng-click="ctrl.setTopLevelOperator(op.name)">\n          {{ op.name }}\n        </input>\n      </label>\n    </div>\n\n    <div class="btn-group pull-right group-actions">\n      <button type="button" class="btn btn-success btn-xs" ng-click="ctrl.addRule()">\n        <i class="glyphicon glyphicon-plus"></i>\n        Add Rule\n      </button>\n      <button type="button" class="btn btn-success btn-xs" ng-click="ctrl.addGroup()">\n        <i class="glyphicon glyphicon-log-in"></i>\n        Add Group\n      </button>\n      <button type="button" class="btn btn-danger btn-xs" ng-click="ctrl.onRemove()"\n              ng-show="ctrl.isNested">\n        <i class="glyphicon glyphicon-trash"></i>\n        Remove Group\n      </button>\n    </div>\n\n    <div class="rules-container" ui-sortable ng-model="ctrl.rules">\n      <div ng-repeat="rule in ctrl.rules">\n        <rule query-options="ctrl.queryOptions" query-data="rule"\n              on-remove="ctrl.removeRule(rule)" class="draggable sortable"></rule>\n      </div>\n    </div>\n  </div>\n</div>\n</div>\n')}]),angular.module("ngQuery").run(["$templateCache",function(e){e.put("js/widgets/saveModal/save-modal.html",'<div class="modal-header">\n  <h3 class="modal-title">Give your query a name...</h3>\n</div>\n<div class="modal-body">\n  <input type="text" class="form-control" ng-model="ctrl.queryName"></input>\n</div>\n<div class="modal-footer">\n  <button class="btn btn-primary" ng-click="ctrl.save()">Save</button>\n  <button class="btn btn-warning" ng-click="ctrl.cancel()">Cancel</button>\n</div>\n')}]),angular.module("ngQuery").run(["$templateCache",function(e){e.put("js/views/query-builder-view.html",'<div class="col-sm-9">\n  <rule-group query-options="ctrl.queryOptions" rules="ctrl.groups"></rule-group>\n\n  <button type="button" class="btn btn-warning" ng-click="ctrl.clearQuery()"\n          ng-disabled="ctrl.groups.length == 0">Clear Query</button>\n  <div class="btn-group pull-right" role="group">\n    <button type="button" class="btn btn-primary" ng-click="ctrl.saveQuery()"\n            ng-disabled="ctrl.groups.length == 0">Save Query</button>\n    <button type="button" class="btn btn-success"\n            ng-disabled="ctrl.groups.length == 0" ng-click="onExecute({data: ctrl.groups})">Exectute Query</button>\n  </div>\n</div>\n<div class="col-sm-3">\n  <div class="panel panel-info">\n    <div class="panel-heading">\n      <h3 class="panel-title">Saved Queries</h3>\n    </div>\n    <div class="panel-body">\n      <span ng-if="ctrl.savedQueries.length == 0">Nothing Saved.</span>\n      <div ng-repeat="save in ctrl.savedQueries">\n        <button type="button" class="btn btn-default btn-sm btn-block saved-query"\n                ng-click="ctrl.restoreQuery(save.query)">\n          {{ save.name }}\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n')}]),angular.module("ngQuery").run(["$templateCache",function(e){e.put("js/directives/ruleDirective/rule-view.html",'<div class="rule-container" ng-if="!ctrl.isArray(ctrl.model)">\n  <form class="form-inline" aria-hidden="true">\n\n    <select ng-model="ctrl.model.selectedField" class="form-control input-sm"\n            ng-change="ctrl.setAvailableOperators()"\n            ng-options="field.identifier as field.display for field in ctrl.queryOptions.fields">\n    </select>\n\n    <select ng-model="ctrl.model.selectedOperator" class="form-control input-sm"\n            ng-options="op.identifier as op.display for op in ctrl.availableOperators">\n    </select>\n\n    <input type="text" class="form-control input-sm" ng-if="!ctrl.validEntries"\n           ng-model="ctrl.model.selectEntry"></input>\n    <select ng-model="ctrl.model.selectEntry" class="form-control input-sm" ng-if="ctrl.validEntries"\n            ng-options="entry.identifier as entry.display for entry in ctrl.validEntries">\n    </select>\n\n    <button type="button" class="btn btn-danger btn-sm pull-right" ng-click="ctrl.onRemove()">\n      <i class="glyphicon glyphicon-trash"></i>\n    </button>\n  </form>\n</div>\n')}]),angular.module("ngQuery").run(["$templateCache",function(e){e.put("js/directives/ruleGroupDirective/query-builder-view.html",'<div class="col-sm-9">\n  <rule-group query-options="ctrl.queryOptions" rules="ctrl.groups"></rule-group>\n\n  <button type="button" class="btn btn-warning" ng-click="ctrl.clearQuery()"\n          ng-disabled="ctrl.groups.length == 0">Clear Query</button>\n  <div class="btn-group pull-right" role="group">\n    <button type="button" class="btn btn-primary" ng-click="ctrl.saveQuery()"\n            ng-disabled="ctrl.groups.length == 0">Save Query</button>\n    <button type="button" class="btn btn-success"\n            ng-disabled="ctrl.groups.length == 0">Exectute Query</button>\n  </div>\n</div>\n<div class="col-sm-3">\n  <div class="panel panel-info">\n    <div class="panel-heading">\n      <h3 class="panel-title">Saved Queries</h3>\n    </div>\n    <div class="panel-body">\n      <span ng-if="ctrl.savedQueries.length == 0">Nothing Saved.</span>\n      <div ng-repeat="save in ctrl.savedQueries">\n        <button type="button" class="btn btn-default btn-sm btn-block saved-query"\n                ng-click="ctrl.restoreQuery(save.query)">\n          {{ save.name }}\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n')}]),angular.module("ngQuery").run(["$templateCache",function(e){e.put("js/directives/ruleGroupDirective/rule-group-view.html",'<div class="rule-group-container">\n<div class="panel panel-default">\n  <div class="panel-body">\n    <div class="btn-group group-conditions" role="group">\n      <label ng-repeat="op in ctrl.queryOptions.topLevelOperators"\n             class="btn btn-xs btn-primary toggle-button"\n             ng-class="{\'active\': ctrl.selectedTopLevelOperator == op.name }">\n        <input name="{{op.name}}_cond" type="radio" value="{{op.name}}"\n               ng-click="ctrl.setTopLevelOperator(op.name)">\n          {{ op.name }}\n        </input>\n      </label>\n    </div>\n\n    <div class="btn-group pull-right group-actions">\n      <button type="button" class="btn btn-success btn-xs" ng-click="ctrl.addRule()">\n        <i class="glyphicon glyphicon-plus"></i>\n        Add Rule\n      </button>\n      <button type="button" class="btn btn-success btn-xs" ng-click="ctrl.addGroup()">\n        <i class="glyphicon glyphicon-log-in"></i>\n        Add Group\n      </button>\n      <button type="button" class="btn btn-danger btn-xs" ng-click="ctrl.onRemove()"\n              ng-show="ctrl.isNested">\n        <i class="glyphicon glyphicon-trash"></i>\n        Remove Group\n      </button>\n    </div>\n\n    <div class="rules-container" ui-sortable ng-model="ctrl.rules">\n      <div ng-repeat="rule in ctrl.rules">\n        <rule query-options="ctrl.queryOptions" query-data="rule"\n              on-remove="ctrl.removeRule(rule)" class="draggable sortable"></rule>\n      </div>\n    </div>\n  </div>\n</div>\n</div>\n')}]),angular.module("ngQuery").run(["$templateCache",function(e){e.put("js/widgets/saveModal/save-modal.html",'<div class="modal-header">\n  <h3 class="modal-title">Give your query a name...</h3>\n</div>\n<div class="modal-body">\n  <input type="text" class="form-control" ng-model="ctrl.queryName"></input>\n</div>\n<div class="modal-footer">\n  <button class="btn btn-primary" ng-click="ctrl.save()">Save</button>\n  <button class="btn btn-warning" ng-click="ctrl.cancel()">Cancel</button>\n</div>\n')}]),angular.module("ngQuery").run(["$templateCache",function(e){e.put("js/views/query-builder-view.html",'<div class="col-sm-9">\n  <rule-group query-options="ctrl.queryOptions" rules="ctrl.groups"></rule-group>\n\n  <button type="button" class="btn btn-warning" ng-click="ctrl.clearQuery()"\n          ng-disabled="ctrl.groups.length == 0">Clear Query</button>\n  <div class="btn-group pull-right" role="group">\n    <button type="button" class="btn btn-primary" ng-click="ctrl.saveQuery()"\n            ng-disabled="ctrl.groups.length == 0">Save Query</button>\n    <button type="button" class="btn btn-success"\n            ng-disabled="ctrl.groups.length == 0" ng-click="onExecute({data: ctrl.groups})">Exectute Query</button>\n  </div>\n</div>\n<div class="col-sm-3">\n  <div class="panel panel-info">\n    <div class="panel-heading">\n      <h3 class="panel-title">Saved Queries</h3>\n    </div>\n    <div class="panel-body">\n      <span ng-if="ctrl.savedQueries.length == 0">Nothing Saved.</span>\n      <div ng-repeat="save in ctrl.savedQueries">\n        <button type="button" class="btn btn-default btn-sm btn-block saved-query"\n                ng-click="ctrl.restoreQuery(save.query)">\n          {{ save.name }}\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n')}]),angular.module("ngQuery").run(["$templateCache",function(e){e.put("js/directives/ruleDirective/rule-view.html",'<div class="rule-container" ng-if="!ctrl.isArray(ctrl.model)">\n  <form class="form-inline" aria-hidden="true">\n\n    <select ng-model="ctrl.model.selectedField" class="form-control input-sm"\n            ng-change="ctrl.setAvailableOperators()"\n            ng-options="field.identifier as field.display for field in ctrl.queryOptions.fields">\n    </select>\n\n    <select ng-model="ctrl.model.selectedOperator" class="form-control input-sm"\n            ng-options="op.identifier as op.display for op in ctrl.availableOperators">\n    </select>\n\n    <input type="text" class="form-control input-sm" ng-if="!ctrl.validEntries"\n           ng-model="ctrl.model.selectEntry"></input>\n    <select ng-model="ctrl.model.selectEntry" class="form-control input-sm" ng-if="ctrl.validEntries"\n            ng-options="entry.identifier as entry.display for entry in ctrl.validEntries">\n    </select>\n\n    <button type="button" class="btn btn-danger btn-sm pull-right" ng-click="ctrl.onRemove()">\n      <i class="glyphicon glyphicon-trash"></i>\n    </button>\n  </form>\n</div>\n')}]),angular.module("ngQuery").run(["$templateCache",function(e){e.put("js/directives/ruleGroupDirective/query-builder-view.html",'<div class="col-sm-9">\n  <rule-group query-options="ctrl.queryOptions" rules="ctrl.groups"></rule-group>\n\n  <button type="button" class="btn btn-warning" ng-click="ctrl.clearQuery()"\n          ng-disabled="ctrl.groups.length == 0">Clear Query</button>\n  <div class="btn-group pull-right" role="group">\n    <button type="button" class="btn btn-primary" ng-click="ctrl.saveQuery()"\n            ng-disabled="ctrl.groups.length == 0">Save Query</button>\n    <button type="button" class="btn btn-success"\n            ng-disabled="ctrl.groups.length == 0">Exectute Query</button>\n  </div>\n</div>\n<div class="col-sm-3">\n  <div class="panel panel-info">\n    <div class="panel-heading">\n      <h3 class="panel-title">Saved Queries</h3>\n    </div>\n    <div class="panel-body">\n      <span ng-if="ctrl.savedQueries.length == 0">Nothing Saved.</span>\n      <div ng-repeat="save in ctrl.savedQueries">\n        <button type="button" class="btn btn-default btn-sm btn-block saved-query"\n                ng-click="ctrl.restoreQuery(save.query)">\n          {{ save.name }}\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n');

}]),angular.module("ngQuery").run(["$templateCache",function(e){e.put("js/directives/ruleGroupDirective/rule-group-view.html",'<div class="rule-group-container">\n<div class="panel panel-default">\n  <div class="panel-body">\n    <div class="btn-group group-conditions" role="group">\n      <label ng-repeat="op in ctrl.queryOptions.topLevelOperators"\n             class="btn btn-xs btn-primary toggle-button"\n             ng-class="{\'active\': ctrl.selectedTopLevelOperator == op.name }">\n        <input name="{{op.name}}_cond" type="radio" value="{{op.name}}"\n               ng-click="ctrl.setTopLevelOperator(op.name)">\n          {{ op.name }}\n        </input>\n      </label>\n    </div>\n\n    <div class="btn-group pull-right group-actions">\n      <button type="button" class="btn btn-success btn-xs" ng-click="ctrl.addRule()">\n        <i class="glyphicon glyphicon-plus"></i>\n        Add Rule\n      </button>\n      <button type="button" class="btn btn-success btn-xs" ng-click="ctrl.addGroup()">\n        <i class="glyphicon glyphicon-log-in"></i>\n        Add Group\n      </button>\n      <button type="button" class="btn btn-danger btn-xs" ng-click="ctrl.onRemove()"\n              ng-show="ctrl.isNested">\n        <i class="glyphicon glyphicon-trash"></i>\n        Remove Group\n      </button>\n    </div>\n\n    <div class="rules-container" ui-sortable ng-model="ctrl.rules">\n      <div ng-repeat="rule in ctrl.rules">\n        <rule query-options="ctrl.queryOptions" query-data="rule"\n              on-remove="ctrl.removeRule(rule)" class="draggable sortable"></rule>\n      </div>\n    </div>\n  </div>\n</div>\n</div>\n')}]),angular.module("ngQuery").run(["$templateCache",function(e){e.put("js/widgets/saveModal/save-modal.html",'<div class="modal-header">\n  <h3 class="modal-title">Give your query a name...</h3>\n</div>\n<div class="modal-body">\n  <input type="text" class="form-control" ng-model="ctrl.queryName"></input>\n</div>\n<div class="modal-footer">\n  <button class="btn btn-primary" ng-click="ctrl.save()">Save</button>\n  <button class="btn btn-warning" ng-click="ctrl.cancel()">Cancel</button>\n</div>\n')}]),angular.module("ngQuery").run(["$templateCache",function(e){e.put("js/views/query-builder-view.html",'<div class="col-sm-9">\n  <rule-group query-options="ctrl.queryOptions" rules="ctrl.groups"></rule-group>\n\n  <button type="button" class="btn btn-warning" ng-click="ctrl.clearQuery()"\n          ng-disabled="ctrl.groups.length == 0">Clear Query</button>\n  <div class="btn-group pull-right" role="group">\n    <button type="button" class="btn btn-primary" ng-click="ctrl.saveQuery()"\n            ng-disabled="ctrl.groups.length == 0">Save Query</button>\n    <button type="button" class="btn btn-success"\n            ng-disabled="ctrl.groups.length == 0" ng-click="onExecute({data: ctrl.groups})">Exectute Query</button>\n  </div>\n</div>\n<div class="col-sm-3">\n  <div class="panel panel-info">\n    <div class="panel-heading">\n      <h3 class="panel-title">Saved Queries</h3>\n    </div>\n    <div class="panel-body">\n      <span ng-if="ctrl.savedQueries.length == 0">Nothing Saved.</span>\n      <div ng-repeat="save in ctrl.savedQueries">\n        <button type="button" class="btn btn-default btn-sm btn-block saved-query"\n                ng-click="ctrl.restoreQuery(save.query)">\n          {{ save.name }}\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n')}]),angular.module("ngQuery").run(["$templateCache",function(e){e.put("js/directives/ruleDirective/rule-view.html",'<div class="rule-container" ng-if="!ctrl.isArray(ctrl.model)">\n  <form class="form-inline" aria-hidden="true">\n\n    <select ng-model="ctrl.model.selectedField" class="form-control input-sm"\n            ng-change="ctrl.setAvailableOperators()"\n            ng-options="field.identifier as field.display for field in ctrl.queryOptions.fields">\n    </select>\n\n    <select ng-model="ctrl.model.selectedOperator" class="form-control input-sm"\n            ng-options="op.identifier as op.display for op in ctrl.availableOperators">\n    </select>\n\n    <input type="text" class="form-control input-sm" ng-if="!ctrl.validEntries"\n           ng-model="ctrl.model.selectEntry"></input>\n    <select ng-model="ctrl.model.selectEntry" class="form-control input-sm" ng-if="ctrl.validEntries"\n            ng-options="entry.identifier as entry.display for entry in ctrl.validEntries">\n    </select>\n\n    <button type="button" class="btn btn-danger btn-sm pull-right" ng-click="ctrl.onRemove()">\n      <i class="glyphicon glyphicon-trash"></i>\n    </button>\n  </form>\n</div>\n')}]),angular.module("ngQuery").run(["$templateCache",function(e){e.put("js/directives/ruleGroupDirective/query-builder-view.html",'<div class="col-sm-9">\n  <rule-group query-options="ctrl.queryOptions" rules="ctrl.groups"></rule-group>\n\n  <button type="button" class="btn btn-warning" ng-click="ctrl.clearQuery()"\n          ng-disabled="ctrl.groups.length == 0">Clear Query</button>\n  <div class="btn-group pull-right" role="group">\n    <button type="button" class="btn btn-primary" ng-click="ctrl.saveQuery()"\n            ng-disabled="ctrl.groups.length == 0">Save Query</button>\n    <button type="button" class="btn btn-success"\n            ng-disabled="ctrl.groups.length == 0">Exectute Query</button>\n  </div>\n</div>\n<div class="col-sm-3">\n  <div class="panel panel-info">\n    <div class="panel-heading">\n      <h3 class="panel-title">Saved Queries</h3>\n    </div>\n    <div class="panel-body">\n      <span ng-if="ctrl.savedQueries.length == 0">Nothing Saved.</span>\n      <div ng-repeat="save in ctrl.savedQueries">\n        <button type="button" class="btn btn-default btn-sm btn-block saved-query"\n                ng-click="ctrl.restoreQuery(save.query)">\n          {{ save.name }}\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n')}]),angular.module("ngQuery").run(["$templateCache",function(e){e.put("js/directives/ruleGroupDirective/rule-group-view.html",'<div class="rule-group-container">\n<div class="panel panel-default">\n  <div class="panel-body">\n    <div class="btn-group group-conditions" role="group">\n      <label ng-repeat="op in ctrl.queryOptions.topLevelOperators"\n             class="btn btn-xs btn-primary toggle-button"\n             ng-class="{\'active\': ctrl.selectedTopLevelOperator == op.name }">\n        <input name="{{op.name}}_cond" type="radio" value="{{op.name}}"\n               ng-click="ctrl.setTopLevelOperator(op.name)">\n          {{ op.name }}\n        </input>\n      </label>\n    </div>\n\n    <div class="btn-group pull-right group-actions">\n      <button type="button" class="btn btn-success btn-xs" ng-click="ctrl.addRule()">\n        <i class="glyphicon glyphicon-plus"></i>\n        Add Rule\n      </button>\n      <button type="button" class="btn btn-success btn-xs" ng-click="ctrl.addGroup()">\n        <i class="glyphicon glyphicon-log-in"></i>\n        Add Group\n      </button>\n      <button type="button" class="btn btn-danger btn-xs" ng-click="ctrl.onRemove()"\n              ng-show="ctrl.isNested">\n        <i class="glyphicon glyphicon-trash"></i>\n        Remove Group\n      </button>\n    </div>\n\n    <div class="rules-container" ui-sortable ng-model="ctrl.rules">\n      <div ng-repeat="rule in ctrl.rules">\n        <rule query-options="ctrl.queryOptions" query-data="rule"\n              on-remove="ctrl.removeRule(rule)" class="draggable sortable"></rule>\n      </div>\n    </div>\n  </div>\n</div>\n</div>\n')}]),angular.module("ngQuery").run(["$templateCache",function(e){e.put("js/widgets/saveModal/save-modal.html",'<div class="modal-header">\n  <h3 class="modal-title">Give your query a name...</h3>\n</div>\n<div class="modal-body">\n  <input type="text" class="form-control" ng-model="ctrl.queryName"></input>\n</div>\n<div class="modal-footer">\n  <button class="btn btn-primary" ng-click="ctrl.save()">Save</button>\n  <button class="btn btn-warning" ng-click="ctrl.cancel()">Cancel</button>\n</div>\n')}]),angular.module("ngQuery").run(["$templateCache",function(e){e.put("js/views/query-builder-view.html",'<div class="col-sm-9">\n  <rule-group query-options="ctrl.queryOptions" rules="ctrl.groups"></rule-group>\n\n  <button type="button" class="btn btn-warning" ng-click="ctrl.clearQuery()"\n          ng-disabled="ctrl.groups.length == 0">Clear Query</button>\n  <div class="btn-group pull-right" role="group">\n    <button type="button" class="btn btn-primary" ng-click="ctrl.saveQuery()"\n            ng-disabled="ctrl.groups.length == 0">Save Query</button>\n    <button type="button" class="btn btn-success"\n            ng-disabled="ctrl.groups.length == 0" ng-click="onExecute({data: ctrl.groups})">Exectute Query</button>\n  </div>\n</div>\n<div class="col-sm-3">\n  <div class="panel panel-info">\n    <div class="panel-heading">\n      <h3 class="panel-title">Saved Queries</h3>\n    </div>\n    <div class="panel-body">\n      <span ng-if="ctrl.savedQueries.length == 0">Nothing Saved.</span>\n      <div ng-repeat="save in ctrl.savedQueries">\n        <button type="button" class="btn btn-default btn-sm btn-block saved-query"\n                ng-click="ctrl.restoreQuery(save.query)">\n          {{ save.name }}\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n')}]),angular.module("ngQuery").run(["$templateCache",function(e){e.put("js/directives/ruleDirective/rule-view.html",'<div class="rule-container" ng-if="!ctrl.isArray(ctrl.model)">\n  <form class="form-inline" aria-hidden="true">\n\n    <select ng-model="ctrl.model.selectedField" class="form-control input-sm"\n            ng-change="ctrl.setAvailableOperators()"\n            ng-options="field.identifier as field.display for field in ctrl.queryOptions.fields">\n    </select>\n\n    <select ng-model="ctrl.model.selectedOperator" class="form-control input-sm"\n            ng-options="op.identifier as op.display for op in ctrl.availableOperators">\n    </select>\n\n    <input type="text" class="form-control input-sm" ng-if="!ctrl.validEntries"\n           ng-model="ctrl.model.selectEntry"></input>\n    <select ng-model="ctrl.model.selectEntry" class="form-control input-sm" ng-if="ctrl.validEntries"\n            ng-options="entry.identifier as entry.display for entry in ctrl.validEntries">\n    </select>\n\n    <button type="button" class="btn btn-danger btn-sm pull-right" ng-click="ctrl.onRemove()">\n      <i class="glyphicon glyphicon-trash"></i>\n    </button>\n  </form>\n</div>\n')}]),angular.module("ngQuery").run(["$templateCache",function(e){e.put("js/directives/ruleGroupDirective/query-builder-view.html",'<div class="col-sm-9">\n  <rule-group query-options="ctrl.queryOptions" rules="ctrl.groups"></rule-group>\n\n  <button type="button" class="btn btn-warning" ng-click="ctrl.clearQuery()"\n          ng-disabled="ctrl.groups.length == 0">Clear Query</button>\n  <div class="btn-group pull-right" role="group">\n    <button type="button" class="btn btn-primary" ng-click="ctrl.saveQuery()"\n            ng-disabled="ctrl.groups.length == 0">Save Query</button>\n    <button type="button" class="btn btn-success"\n            ng-disabled="ctrl.groups.length == 0">Exectute Query</button>\n  </div>\n</div>\n<div class="col-sm-3">\n  <div class="panel panel-info">\n    <div class="panel-heading">\n      <h3 class="panel-title">Saved Queries</h3>\n    </div>\n    <div class="panel-body">\n      <span ng-if="ctrl.savedQueries.length == 0">Nothing Saved.</span>\n      <div ng-repeat="save in ctrl.savedQueries">\n        <button type="button" class="btn btn-default btn-sm btn-block saved-query"\n                ng-click="ctrl.restoreQuery(save.query)">\n          {{ save.name }}\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n')}]),angular.module("ngQuery").run(["$templateCache",function(e){e.put("js/directives/ruleGroupDirective/rule-group-view.html",'<div class="rule-group-container">\n<div class="panel panel-default">\n  <div class="panel-body">\n    <div class="btn-group group-conditions" role="group">\n      <label ng-repeat="op in ctrl.queryOptions.topLevelOperators"\n             class="btn btn-xs btn-primary toggle-button"\n             ng-class="{\'active\': ctrl.selectedTopLevelOperator == op.name }">\n        <input name="{{op.name}}_cond" type="radio" value="{{op.name}}"\n               ng-click="ctrl.setTopLevelOperator(op.name)">\n          {{ op.name }}\n        </input>\n      </label>\n    </div>\n\n    <div class="btn-group pull-right group-actions">\n      <button type="button" class="btn btn-success btn-xs" ng-click="ctrl.addRule()">\n        <i class="glyphicon glyphicon-plus"></i>\n        Add Rule\n      </button>\n      <button type="button" class="btn btn-success btn-xs" ng-click="ctrl.addGroup()">\n        <i class="glyphicon glyphicon-log-in"></i>\n        Add Group\n      </button>\n      <button type="button" class="btn btn-danger btn-xs" ng-click="ctrl.onRemove()"\n              ng-show="ctrl.isNested">\n        <i class="glyphicon glyphicon-trash"></i>\n        Remove Group\n      </button>\n    </div>\n\n    <div class="rules-container" ui-sortable ng-model="ctrl.rules">\n      <div ng-repeat="rule in ctrl.rules">\n        <rule query-options="ctrl.queryOptions" query-data="rule"\n              on-remove="ctrl.removeRule(rule)" class="draggable sortable"></rule>\n      </div>\n    </div>\n  </div>\n</div>\n</div>\n')}]),angular.module("ngQuery").run(["$templateCache",function(e){e.put("js/widgets/saveModal/save-modal.html",'<div class="modal-header">\n  <h3 class="modal-title">Give your query a name...</h3>\n</div>\n<div class="modal-body">\n  <input type="text" class="form-control" ng-model="ctrl.queryName"></input>\n</div>\n<div class="modal-footer">\n  <button class="btn btn-primary" ng-click="ctrl.save()">Save</button>\n  <button class="btn btn-warning" ng-click="ctrl.cancel()">Cancel</button>\n</div>\n')}]),angular.module("ngQuery").run(["$templateCache",function(e){e.put("js/views/query-builder-view.html",'<div class="col-sm-9">\n  <rule-group query-options="ctrl.queryOptions" rules="ctrl.groups"></rule-group>\n\n  <button type="button" class="btn btn-warning" ng-click="ctrl.clearQuery()"\n          ng-disabled="ctrl.groups.length == 0">Clear Query</button>\n  <div class="btn-group pull-right" role="group">\n    <button type="button" class="btn btn-primary" ng-click="ctrl.saveQuery()"\n            ng-disabled="ctrl.groups.length == 0">Save Query</button>\n    <button type="button" class="btn btn-success"\n            ng-disabled="ctrl.groups.length == 0" ng-click="onExecute({data: ctrl.groups})">Exectute Query</button>\n  </div>\n</div>\n<div class="col-sm-3">\n  <div class="panel panel-info">\n    <div class="panel-heading">\n      <h3 class="panel-title">Saved Queries</h3>\n    </div>\n    <div class="panel-body">\n      <span ng-if="ctrl.savedQueries.length == 0">Nothing Saved.</span>\n      <div ng-repeat="save in ctrl.savedQueries">\n        <button type="button" class="btn btn-default btn-sm btn-block saved-query"\n                ng-click="ctrl.restoreQuery(save.query)">\n          {{ save.name }}\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n')}]),angular.module("ngQuery").run(["$templateCache",function(e){e.put("js/directives/ruleDirective/rule-view.html",'<div class="rule-container" ng-if="!ctrl.isArray(ctrl.model)">\n  <form class="form-inline" aria-hidden="true">\n\n    <select ng-model="ctrl.model.selectedField" class="form-control input-sm"\n            ng-change="ctrl.setAvailableOperators()"\n            ng-options="field.identifier as field.display for field in ctrl.queryOptions.fields">\n    </select>\n\n    <select ng-model="ctrl.model.selectedOperator" class="form-control input-sm"\n            ng-options="op.identifier as op.display for op in ctrl.availableOperators">\n    </select>\n\n    <input type="text" class="form-control input-sm" ng-if="!ctrl.validEntries"\n           ng-model="ctrl.model.selectEntry"></input>\n    <select ng-model="ctrl.model.selectEntry" class="form-control input-sm" ng-if="ctrl.validEntries"\n            ng-options="entry.identifier as entry.display for entry in ctrl.validEntries">\n    </select>\n\n    <button type="button" class="btn btn-danger btn-sm pull-right" ng-click="ctrl.onRemove()">\n      <i class="glyphicon glyphicon-trash"></i>\n    </button>\n  </form>\n</div>\n')}]),angular.module("ngQuery").run(["$templateCache",function(e){e.put("js/directives/ruleGroupDirective/query-builder-view.html",'<div class="col-sm-9">\n  <rule-group query-options="ctrl.queryOptions" rules="ctrl.groups"></rule-group>\n\n  <button type="button" class="btn btn-warning" ng-click="ctrl.clearQuery()"\n          ng-disabled="ctrl.groups.length == 0">Clear Query</button>\n  <div class="btn-group pull-right" role="group">\n    <button type="button" class="btn btn-primary" ng-click="ctrl.saveQuery()"\n            ng-disabled="ctrl.groups.length == 0">Save Query</button>\n    <button type="button" class="btn btn-success"\n            ng-disabled="ctrl.groups.length == 0">Exectute Query</button>\n  </div>\n</div>\n<div class="col-sm-3">\n  <div class="panel panel-info">\n    <div class="panel-heading">\n      <h3 class="panel-title">Saved Queries</h3>\n    </div>\n    <div class="panel-body">\n      <span ng-if="ctrl.savedQueries.length == 0">Nothing Saved.</span>\n      <div ng-repeat="save in ctrl.savedQueries">\n        <button type="button" class="btn btn-default btn-sm btn-block saved-query"\n                ng-click="ctrl.restoreQuery(save.query)">\n          {{ save.name }}\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n')}]),angular.module("ngQuery").run(["$templateCache",function(e){e.put("js/directives/ruleGroupDirective/rule-group-view.html",'<div class="rule-group-container">\n<div class="panel panel-default">\n  <div class="panel-body">\n    <div class="btn-group group-conditions" role="group">\n      <label ng-repeat="op in ctrl.queryOptions.topLevelOperators"\n             class="btn btn-xs btn-primary toggle-button"\n             ng-class="{\'active\': ctrl.selectedTopLevelOperator == op.name }">\n        <input name="{{op.name}}_cond" type="radio" value="{{op.name}}"\n               ng-click="ctrl.setTopLevelOperator(op.name)">\n          {{ op.name }}\n        </input>\n      </label>\n    </div>\n\n    <div class="btn-group pull-right group-actions">\n      <button type="button" class="btn btn-success btn-xs" ng-click="ctrl.addRule()">\n        <i class="glyphicon glyphicon-plus"></i>\n        Add Rule\n      </button>\n      <button type="button" class="btn btn-success btn-xs" ng-click="ctrl.addGroup()">\n        <i class="glyphicon glyphicon-log-in"></i>\n        Add Group\n      </button>\n      <button type="button" class="btn btn-danger btn-xs" ng-click="ctrl.onRemove()"\n              ng-show="ctrl.isNested">\n        <i class="glyphicon glyphicon-trash"></i>\n        Remove Group\n      </button>\n    </div>\n\n    <div class="rules-container" ui-sortable ng-model="ctrl.rules">\n      <div ng-repeat="rule in ctrl.rules">\n        <rule query-options="ctrl.queryOptions" query-data="rule"\n              on-remove="ctrl.removeRule(rule)" class="draggable sortable"></rule>\n      </div>\n    </div>\n  </div>\n</div>\n</div>\n')}]),angular.module("ngQuery").run(["$templateCache",function(e){e.put("js/widgets/saveModal/save-modal.html",'<div class="modal-header">\n  <h3 class="modal-title">Give your query a name...</h3>\n</div>\n<div class="modal-body">\n  <input type="text" class="form-control" ng-model="ctrl.queryName"></input>\n</div>\n<div class="modal-footer">\n  <button class="btn btn-primary" ng-click="ctrl.save()">Save</button>\n  <button class="btn btn-warning" ng-click="ctrl.cancel()">Cancel</button>\n</div>\n')}]),angular.module("ngQuery").run(["$templateCache",function(e){e.put("js/views/query-builder-view.html",'<div class="col-sm-9">\n  <rule-group query-options="ctrl.queryOptions" rules="ctrl.groups"></rule-group>\n\n  <button type="button" class="btn btn-warning" ng-click="ctrl.clearQuery()"\n          ng-disabled="ctrl.groups.length == 0">Clear Query</button>\n  <div class="btn-group pull-right" role="group">\n    <button type="button" class="btn btn-primary" ng-click="ctrl.saveQuery()"\n            ng-disabled="ctrl.groups.length == 0">Save Query</button>\n    <button type="button" class="btn btn-success"\n            ng-disabled="ctrl.groups.length == 0" ng-click="onExecute({data: ctrl.groups})">Exectute Query</button>\n  </div>\n</div>\n<div class="col-sm-3">\n  <div class="panel panel-info">\n    <div class="panel-heading">\n      <h3 class="panel-title">Saved Queries</h3>\n    </div>\n    <div class="panel-body">\n      <span ng-if="ctrl.savedQueries.length == 0">Nothing Saved.</span>\n      <div ng-repeat="save in ctrl.savedQueries">\n        <button type="button" class="btn btn-default btn-sm btn-block saved-query"\n                ng-click="ctrl.restoreQuery(save.query)">\n          {{ save.name }}\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n')}]),angular.module("ngQuery").run(["$templateCache",function(e){e.put("js/directives/ruleDirective/rule-view.html",'<div class="rule-container" ng-if="!ctrl.isArray(ctrl.model)">\n  <form class="form-inline" aria-hidden="true">\n\n    <select ng-model="ctrl.model.selectedField" class="form-control input-sm"\n            ng-change="ctrl.setAvailableOperators()"\n            ng-options="field.identifier as field.display for field in ctrl.queryOptions.fields">\n    </select>\n\n    <select ng-model="ctrl.model.selectedOperator" class="form-control input-sm"\n            ng-options="op.identifier as op.display for op in ctrl.availableOperators">\n    </select>\n\n    <input type="text" class="form-control input-sm" ng-if="!ctrl.validEntries"\n           ng-model="ctrl.model.selectEntry"></input>\n    <select ng-model="ctrl.model.selectEntry" class="form-control input-sm" ng-if="ctrl.validEntries"\n            ng-options="entry.identifier as entry.display for entry in ctrl.validEntries">\n    </select>\n\n    <button type="button" class="btn btn-danger btn-sm pull-right" ng-click="ctrl.onRemove()">\n      <i class="glyphicon glyphicon-trash"></i>\n    </button>\n  </form>\n</div>\n')}]),angular.module("ngQuery").run(["$templateCache",function(e){e.put("js/directives/ruleGroupDirective/query-builder-view.html",'<div class="col-sm-9">\n  <rule-group query-options="ctrl.queryOptions" rules="ctrl.groups"></rule-group>\n\n  <button type="button" class="btn btn-warning" ng-click="ctrl.clearQuery()"\n          ng-disabled="ctrl.groups.length == 0">Clear Query</button>\n  <div class="btn-group pull-right" role="group">\n    <button type="button" class="btn btn-primary" ng-click="ctrl.saveQuery()"\n            ng-disabled="ctrl.groups.length == 0">Save Query</button>\n    <button type="button" class="btn btn-success"\n            ng-disabled="ctrl.groups.length == 0">Exectute Query</button>\n  </div>\n</div>\n<div class="col-sm-3">\n  <div class="panel panel-info">\n    <div class="panel-heading">\n      <h3 class="panel-title">Saved Queries</h3>\n    </div>\n    <div class="panel-body">\n      <span ng-if="ctrl.savedQueries.length == 0">Nothing Saved.</span>\n      <div ng-repeat="save in ctrl.savedQueries">\n        <button type="button" class="btn btn-default btn-sm btn-block saved-query"\n                ng-click="ctrl.restoreQuery(save.query)">\n          {{ save.name }}\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n')}]),angular.module("ngQuery").run(["$templateCache",function(e){e.put("js/directives/ruleGroupDirective/rule-group-view.html",'<div class="rule-group-container">\n<div class="panel panel-default">\n  <div class="panel-body">\n    <div class="btn-group group-conditions" role="group">\n      <label ng-repeat="op in ctrl.queryOptions.topLevelOperators"\n             class="btn btn-xs btn-primary toggle-button"\n             ng-class="{\'active\': ctrl.selectedTopLevelOperator == op.name }">\n        <input name="{{op.name}}_cond" type="radio" value="{{op.name}}"\n               ng-click="ctrl.setTopLevelOperator(op.name)">\n          {{ op.name }}\n        </input>\n      </label>\n    </div>\n\n    <div class="btn-group pull-right group-actions">\n      <button type="button" class="btn btn-success btn-xs" ng-click="ctrl.addRule()">\n        <i class="glyphicon glyphicon-plus"></i>\n        Add Rule\n      </button>\n      <button type="button" class="btn btn-success btn-xs" ng-click="ctrl.addGroup()">\n        <i class="glyphicon glyphicon-log-in"></i>\n        Add Group\n      </button>\n      <button type="button" class="btn btn-danger btn-xs" ng-click="ctrl.onRemove()"\n              ng-show="ctrl.isNested">\n        <i class="glyphicon glyphicon-trash"></i>\n        Remove Group\n      </button>\n    </div>\n\n    <div class="rules-container" ui-sortable ng-model="ctrl.rules">\n      <div ng-repeat="rule in ctrl.rules">\n        <rule query-options="ctrl.queryOptions" query-data="rule"\n              on-remove="ctrl.removeRule(rule)" class="draggable sortable"></rule>\n      </div>\n    </div>\n  </div>\n</div>\n</div>\n')}]),angular.module("ngQuery").run(["$templateCache",function(e){e.put("js/widgets/saveModal/save-modal.html",'<div class="modal-header">\n  <h3 class="modal-title">Give your query a name...</h3>\n</div>\n<div class="modal-body">\n  <input type="text" class="form-control" ng-model="ctrl.queryName"></input>\n</div>\n<div class="modal-footer">\n  <button class="btn btn-primary" ng-click="ctrl.save()">Save</button>\n  <button class="btn btn-warning" ng-click="ctrl.cancel()">Cancel</button>\n</div>\n')}]),angular.module("ngQuery").run(["$templateCache",function(e){e.put("js/views/query-builder-view.html",'<div class="col-sm-9">\n  <rule-group query-options="ctrl.queryOptions" rules="ctrl.groups"></rule-group>\n\n  <button type="button" class="btn btn-warning" ng-click="ctrl.clearQuery()"\n          ng-disabled="ctrl.groups.length == 0">Clear Query</button>\n  <div class="btn-group pull-right" role="group">\n    <button type="button" class="btn btn-primary" ng-click="ctrl.saveQuery()"\n            ng-disabled="ctrl.groups.length == 0">Save Query</button>\n    <button type="button" class="btn btn-success"\n            ng-disabled="ctrl.groups.length == 0" ng-click="onExecute({data: ctrl.groups})">Exectute Query</button>\n  </div>\n</div>\n<div class="col-sm-3">\n  <div class="panel panel-info">\n    <div class="panel-heading">\n      <h3 class="panel-title">Saved Queries</h3>\n    </div>\n    <div class="panel-body">\n      <span ng-if="ctrl.savedQueries.length == 0">Nothing Saved.</span>\n      <div ng-repeat="save in ctrl.savedQueries">\n        <button type="button" class="btn btn-default btn-sm btn-block saved-query"\n                ng-click="ctrl.restoreQuery(save.query)">\n          {{ save.name }}\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n')}]),angular.module("ngQuery").run(["$templateCache",function(e){e.put("js/directives/ruleDirective/rule-view.html",'<div class="rule-container" ng-if="!ctrl.isArray(ctrl.model)">\n  <form class="form-inline" aria-hidden="true">\n\n    <select ng-model="ctrl.model.selectedField" class="form-control input-sm"\n            ng-change="ctrl.setAvailableOperators()"\n            ng-options="field.identifier as field.display for field in ctrl.queryOptions.fields">\n    </select>\n\n    <select ng-model="ctrl.model.selectedOperator" class="form-control input-sm"\n            ng-options="op.identifier as op.display for op in ctrl.availableOperators">\n    </select>\n\n    <input type="text" class="form-control input-sm" ng-if="!ctrl.validEntries"\n           ng-model="ctrl.model.selectEntry"></input>\n    <select ng-model="ctrl.model.selectEntry" class="form-control input-sm" ng-if="ctrl.validEntries"\n            ng-options="entry.identifier as entry.display for entry in ctrl.validEntries">\n    </select>\n\n    <button type="button" class="btn btn-danger btn-sm pull-right" ng-click="ctrl.onRemove()">\n      <i class="glyphicon glyphicon-trash"></i>\n    </button>\n  </form>\n</div>\n')}]),angular.module("ngQuery").run(["$templateCache",function(e){e.put("js/directives/ruleGroupDirective/query-builder-view.html",'<div class="col-sm-9">\n  <rule-group query-options="ctrl.queryOptions" rules="ctrl.groups"></rule-group>\n\n  <button type="button" class="btn btn-warning" ng-click="ctrl.clearQuery()"\n          ng-disabled="ctrl.groups.length == 0">Clear Query</button>\n  <div class="btn-group pull-right" role="group">\n    <button type="button" class="btn btn-primary" ng-click="ctrl.saveQuery()"\n            ng-disabled="ctrl.groups.length == 0">Save Query</button>\n    <button type="button" class="btn btn-success"\n            ng-disabled="ctrl.groups.length == 0">Exectute Query</button>\n  </div>\n</div>\n<div class="col-sm-3">\n  <div class="panel panel-info">\n    <div class="panel-heading">\n      <h3 class="panel-title">Saved Queries</h3>\n    </div>\n    <div class="panel-body">\n      <span ng-if="ctrl.savedQueries.length == 0">Nothing Saved.</span>\n      <div ng-repeat="save in ctrl.savedQueries">\n        <button type="button" class="btn btn-default btn-sm btn-block saved-query"\n                ng-click="ctrl.restoreQuery(save.query)">\n          {{ save.name }}\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n')}]),angular.module("ngQuery").run(["$templateCache",function(e){e.put("js/directives/ruleGroupDirective/rule-group-view.html",'<div class="rule-group-container">\n<div class="panel panel-default">\n  <div class="panel-body">\n    <div class="btn-group group-conditions" role="group">\n      <label ng-repeat="op in ctrl.queryOptions.topLevelOperators"\n             class="btn btn-xs btn-primary toggle-button"\n             ng-class="{\'active\': ctrl.selectedTopLevelOperator == op.name }">\n        <input name="{{op.name}}_cond" type="radio" value="{{op.name}}"\n               ng-click="ctrl.setTopLevelOperator(op.name)">\n          {{ op.name }}\n        </input>\n      </label>\n    </div>\n\n    <div class="btn-group pull-right group-actions">\n      <button type="button" class="btn btn-success btn-xs" ng-click="ctrl.addRule()">\n        <i class="glyphicon glyphicon-plus"></i>\n        Add Rule\n      </button>\n      <button type="button" class="btn btn-success btn-xs" ng-click="ctrl.addGroup()">\n        <i class="glyphicon glyphicon-log-in"></i>\n        Add Group\n      </button>\n      <button type="button" class="btn btn-danger btn-xs" ng-click="ctrl.onRemove()"\n              ng-show="ctrl.isNested">\n        <i class="glyphicon glyphicon-trash"></i>\n        Remove Group\n      </button>\n    </div>\n\n    <div class="rules-container" ui-sortable ng-model="ctrl.rules">\n      <div ng-repeat="rule in ctrl.rules">\n        <rule query-options="ctrl.queryOptions" query-data="rule"\n              on-remove="ctrl.removeRule(rule)" class="draggable sortable"></rule>\n      </div>\n    </div>\n  </div>\n</div>\n</div>\n')}]),angular.module("ngQuery").run(["$templateCache",function(e){e.put("js/widgets/saveModal/save-modal.html",'<div class="modal-header">\n  <h3 class="modal-title">Give your query a name...</h3>\n</div>\n<div class="modal-body">\n  <input type="text" class="form-control" ng-model="ctrl.queryName"></input>\n</div>\n<div class="modal-footer">\n  <button class="btn btn-primary" ng-click="ctrl.save()">Save</button>\n  <button class="btn btn-warning" ng-click="ctrl.cancel()">Cancel</button>\n</div>\n')}]),angular.module("ngQuery").run(["$templateCache",function(e){e.put("js/views/query-builder-view.html",'<div class="col-sm-9">\n  <rule-group query-options="ctrl.queryOptions" rules="ctrl.groups"></rule-group>\n\n  <button type="button" class="btn btn-warning" ng-click="ctrl.clearQuery()"\n          ng-disabled="ctrl.groups.length == 0">Clear Query</button>\n  <div class="btn-group pull-right" role="group">\n    <button type="button" class="btn btn-primary" ng-click="ctrl.saveQuery()"\n            ng-disabled="ctrl.groups.length == 0">Save Query</button>\n    <button type="button" class="btn btn-success"\n            ng-disabled="ctrl.groups.length == 0" ng-click="onExecute({data: ctrl.groups})">Exectute Query</button>\n  </div>\n</div>\n<div class="col-sm-3">\n  <div class="panel panel-info">\n    <div class="panel-heading">\n      <h3 class="panel-title">Saved Queries</h3>\n    </div>\n    <div class="panel-body">\n      <span ng-if="ctrl.savedQueries.length == 0">Nothing Saved.</span>\n      <div ng-repeat="save in ctrl.savedQueries">\n        <button type="button" class="btn btn-default btn-sm btn-block saved-query"\n                ng-click="ctrl.restoreQuery(save.query)">\n          {{ save.name }}\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n');

}]),angular.module("ngQuery").run(["$templateCache",function(e){e.put("js/directives/ruleDirective/rule-view.html",'<div class="rule-container" ng-if="!ctrl.isArray(ctrl.model)">\n  <form class="form-inline" aria-hidden="true">\n\n    <select ng-model="ctrl.model.selectedField" class="form-control input-sm"\n            ng-change="ctrl.setAvailableOperators()"\n            ng-options="field.identifier as field.display for field in ctrl.queryOptions.fields">\n    </select>\n\n    <select ng-model="ctrl.model.selectedOperator" class="form-control input-sm"\n            ng-options="op.identifier as op.display for op in ctrl.availableOperators">\n    </select>\n\n    <input type="text" class="form-control input-sm" ng-if="!ctrl.validEntries"\n           ng-model="ctrl.model.selectEntry"></input>\n    <select ng-model="ctrl.model.selectEntry" class="form-control input-sm" ng-if="ctrl.validEntries"\n            ng-options="entry.identifier as entry.display for entry in ctrl.validEntries">\n    </select>\n\n    <button type="button" class="btn btn-danger btn-sm pull-right" ng-click="ctrl.onRemove()">\n      <i class="glyphicon glyphicon-trash"></i>\n    </button>\n  </form>\n</div>\n')}]),angular.module("ngQuery").run(["$templateCache",function(e){e.put("js/directives/ruleGroupDirective/query-builder-view.html",'<div class="col-sm-9">\n  <rule-group query-options="ctrl.queryOptions" rules="ctrl.groups"></rule-group>\n\n  <button type="button" class="btn btn-warning" ng-click="ctrl.clearQuery()"\n          ng-disabled="ctrl.groups.length == 0">Clear Query</button>\n  <div class="btn-group pull-right" role="group">\n    <button type="button" class="btn btn-primary" ng-click="ctrl.saveQuery()"\n            ng-disabled="ctrl.groups.length == 0">Save Query</button>\n    <button type="button" class="btn btn-success"\n            ng-disabled="ctrl.groups.length == 0">Exectute Query</button>\n  </div>\n</div>\n<div class="col-sm-3">\n  <div class="panel panel-info">\n    <div class="panel-heading">\n      <h3 class="panel-title">Saved Queries</h3>\n    </div>\n    <div class="panel-body">\n      <span ng-if="ctrl.savedQueries.length == 0">Nothing Saved.</span>\n      <div ng-repeat="save in ctrl.savedQueries">\n        <button type="button" class="btn btn-default btn-sm btn-block saved-query"\n                ng-click="ctrl.restoreQuery(save.query)">\n          {{ save.name }}\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n')}]),angular.module("ngQuery").run(["$templateCache",function(e){e.put("js/directives/ruleGroupDirective/rule-group-view.html",'<div class="rule-group-container">\n<div class="panel panel-default">\n  <div class="panel-body">\n    <div class="btn-group group-conditions" role="group">\n      <label ng-repeat="op in ctrl.queryOptions.topLevelOperators"\n             class="btn btn-xs btn-primary toggle-button"\n             ng-class="{\'active\': ctrl.selectedTopLevelOperator == op.name }">\n        <input name="{{op.name}}_cond" type="radio" value="{{op.name}}"\n               ng-click="ctrl.setTopLevelOperator(op.name)">\n          {{ op.name }}\n        </input>\n      </label>\n    </div>\n\n    <div class="btn-group pull-right group-actions">\n      <button type="button" class="btn btn-success btn-xs" ng-click="ctrl.addRule()">\n        <i class="glyphicon glyphicon-plus"></i>\n        Add Rule\n      </button>\n      <button type="button" class="btn btn-success btn-xs" ng-click="ctrl.addGroup()">\n        <i class="glyphicon glyphicon-log-in"></i>\n        Add Group\n      </button>\n      <button type="button" class="btn btn-danger btn-xs" ng-click="ctrl.onRemove()"\n              ng-show="ctrl.isNested">\n        <i class="glyphicon glyphicon-trash"></i>\n        Remove Group\n      </button>\n    </div>\n\n    <div class="rules-container" ui-sortable ng-model="ctrl.rules">\n      <div ng-repeat="rule in ctrl.rules">\n        <rule query-options="ctrl.queryOptions" query-data="rule"\n              on-remove="ctrl.removeRule(rule)" class="draggable sortable"></rule>\n      </div>\n    </div>\n  </div>\n</div>\n</div>\n')}]),angular.module("ngQuery").run(["$templateCache",function(e){e.put("js/widgets/saveModal/save-modal.html",'<div class="modal-header">\n  <h3 class="modal-title">Give your query a name...</h3>\n</div>\n<div class="modal-body">\n  <input type="text" class="form-control" ng-model="ctrl.queryName"></input>\n</div>\n<div class="modal-footer">\n  <button class="btn btn-primary" ng-click="ctrl.save()">Save</button>\n  <button class="btn btn-warning" ng-click="ctrl.cancel()">Cancel</button>\n</div>\n')}]),angular.module("ngQuery").run(["$templateCache",function(e){e.put("js/views/query-builder-view.html",'<div class="col-sm-9">\n  <rule-group query-options="ctrl.queryOptions" rules="ctrl.groups"></rule-group>\n\n  <button type="button" class="btn btn-warning" ng-click="ctrl.clearQuery()"\n          ng-disabled="ctrl.groups.length == 0">Clear Query</button>\n  <div class="btn-group pull-right" role="group">\n    <button type="button" class="btn btn-primary" ng-click="ctrl.saveQuery()"\n            ng-disabled="ctrl.groups.length == 0">Save Query</button>\n    <button type="button" class="btn btn-success"\n            ng-disabled="ctrl.groups.length == 0" ng-click="onExecute({data: ctrl.groups})">Exectute Query</button>\n  </div>\n</div>\n<div class="col-sm-3">\n  <div class="panel panel-info">\n    <div class="panel-heading">\n      <h3 class="panel-title">Saved Queries</h3>\n    </div>\n    <div class="panel-body">\n      <span ng-if="ctrl.savedQueries.length == 0">Nothing Saved.</span>\n      <div ng-repeat="save in ctrl.savedQueries">\n        <button type="button" class="btn btn-default btn-sm btn-block saved-query"\n                ng-click="ctrl.restoreQuery(save.query)">\n          {{ save.name }}\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n')}]),angular.module("ngQuery").run(["$templateCache",function(e){e.put("js/directives/ruleDirective/rule-view.html",'<div class="rule-container" ng-if="!ctrl.isArray(ctrl.model)">\n  <form class="form-inline" aria-hidden="true">\n\n    <select ng-model="ctrl.model.selectedField" class="form-control input-sm"\n            ng-change="ctrl.setAvailableOperators()"\n            ng-options="field.identifier as field.display for field in ctrl.queryOptions.fields">\n    </select>\n\n    <select ng-model="ctrl.model.selectedOperator" class="form-control input-sm"\n            ng-options="op.identifier as op.display for op in ctrl.availableOperators">\n    </select>\n\n    <input type="text" class="form-control input-sm" ng-if="!ctrl.validEntries"\n           ng-model="ctrl.model.selectEntry"></input>\n    <select ng-model="ctrl.model.selectEntry" class="form-control input-sm" ng-if="ctrl.validEntries"\n            ng-options="entry.identifier as entry.display for entry in ctrl.validEntries">\n    </select>\n\n    <button type="button" class="btn btn-danger btn-sm pull-right" ng-click="ctrl.onRemove()">\n      <i class="glyphicon glyphicon-trash"></i>\n    </button>\n  </form>\n</div>\n')}]),angular.module("ngQuery").run(["$templateCache",function(e){e.put("js/directives/ruleGroupDirective/query-builder-view.html",'<div class="col-sm-9">\n  <rule-group query-options="ctrl.queryOptions" rules="ctrl.groups"></rule-group>\n\n  <button type="button" class="btn btn-warning" ng-click="ctrl.clearQuery()"\n          ng-disabled="ctrl.groups.length == 0">Clear Query</button>\n  <div class="btn-group pull-right" role="group">\n    <button type="button" class="btn btn-primary" ng-click="ctrl.saveQuery()"\n            ng-disabled="ctrl.groups.length == 0">Save Query</button>\n    <button type="button" class="btn btn-success"\n            ng-disabled="ctrl.groups.length == 0">Exectute Query</button>\n  </div>\n</div>\n<div class="col-sm-3">\n  <div class="panel panel-info">\n    <div class="panel-heading">\n      <h3 class="panel-title">Saved Queries</h3>\n    </div>\n    <div class="panel-body">\n      <span ng-if="ctrl.savedQueries.length == 0">Nothing Saved.</span>\n      <div ng-repeat="save in ctrl.savedQueries">\n        <button type="button" class="btn btn-default btn-sm btn-block saved-query"\n                ng-click="ctrl.restoreQuery(save.query)">\n          {{ save.name }}\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n')}]),angular.module("ngQuery").run(["$templateCache",function(e){e.put("js/directives/ruleGroupDirective/rule-group-view.html",'<div class="rule-group-container">\n<div class="panel panel-default">\n  <div class="panel-body">\n    <div class="btn-group group-conditions" role="group">\n      <label ng-repeat="op in ctrl.queryOptions.topLevelOperators"\n             class="btn btn-xs btn-primary toggle-button"\n             ng-class="{\'active\': ctrl.selectedTopLevelOperator == op.name }">\n        <input name="{{op.name}}_cond" type="radio" value="{{op.name}}"\n               ng-click="ctrl.setTopLevelOperator(op.name)">\n          {{ op.name }}\n        </input>\n      </label>\n    </div>\n\n    <div class="btn-group pull-right group-actions">\n      <button type="button" class="btn btn-success btn-xs" ng-click="ctrl.addRule()">\n        <i class="glyphicon glyphicon-plus"></i>\n        Add Rule\n      </button>\n      <button type="button" class="btn btn-success btn-xs" ng-click="ctrl.addGroup()">\n        <i class="glyphicon glyphicon-log-in"></i>\n        Add Group\n      </button>\n      <button type="button" class="btn btn-danger btn-xs" ng-click="ctrl.onRemove()"\n              ng-show="ctrl.isNested">\n        <i class="glyphicon glyphicon-trash"></i>\n        Remove Group\n      </button>\n    </div>\n\n    <div class="rules-container" ui-sortable ng-model="ctrl.rules">\n      <div ng-repeat="rule in ctrl.rules">\n        <rule query-options="ctrl.queryOptions" query-data="rule"\n              on-remove="ctrl.removeRule(rule)" class="draggable sortable"></rule>\n      </div>\n    </div>\n  </div>\n</div>\n</div>\n')}]),angular.module("ngQuery").run(["$templateCache",function(e){e.put("js/widgets/saveModal/save-modal.html",'<div class="modal-header">\n  <h3 class="modal-title">Give your query a name...</h3>\n</div>\n<div class="modal-body">\n  <input type="text" class="form-control" ng-model="ctrl.queryName"></input>\n</div>\n<div class="modal-footer">\n  <button class="btn btn-primary" ng-click="ctrl.save()">Save</button>\n  <button class="btn btn-warning" ng-click="ctrl.cancel()">Cancel</button>\n</div>\n')}]);
angular.module("ngQuery").run(["$templateCache",function(n){n.put("js/views/query-builder-view.html",'<div class="col-sm-9">\n  <rule-group query-options="ctrl.queryOptions" rules="ctrl.groups"></rule-group>\n\n  <button type="button" class="btn btn-warning" ng-click="ctrl.clearQuery()"\n          ng-disabled="ctrl.groups.length == 0">Clear Query</button>\n  <div class="btn-group pull-right" role="group">\n    <button type="button" class="btn btn-primary" ng-click="ctrl.saveQuery()"\n            ng-disabled="ctrl.groups.length == 0">Save Query</button>\n    <button type="button" class="btn btn-success"\n            ng-disabled="ctrl.groups.length == 0" ng-click="onExecute({data: ctrl.groups})">Exectute Query</button>\n  </div>\n</div>\n<div class="col-sm-3">\n  <div class="panel panel-info">\n    <div class="panel-heading">\n      <h3 class="panel-title">Saved Queries</h3>\n    </div>\n    <div class="panel-body">\n      <span ng-if="ctrl.savedQueries.length == 0">Nothing Saved.</span>\n      <div ng-repeat="save in ctrl.savedQueries">\n        <button type="button" class="btn btn-default btn-sm btn-block saved-query"\n                ng-click="ctrl.restoreQuery(save.query)">\n          {{ save.name }}\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n')}]);
angular.module("ngQuery").run(["$templateCache",function(n){n.put("js/directives/ruleDirective/rule-view.html",'<div class="rule-container" ng-if="!ctrl.isArray(ctrl.model)">\n  <form class="form-inline" aria-hidden="true">\n\n    <select ng-model="ctrl.model.selectedField" class="form-control input-sm"\n            ng-change="ctrl.setAvailableOperators()"\n            ng-options="field.identifier as field.display for field in ctrl.queryOptions.fields">\n    </select>\n\n    <select ng-model="ctrl.model.selectedOperator" class="form-control input-sm"\n            ng-options="op.identifier as op.display for op in ctrl.availableOperators">\n    </select>\n\n    <input type="text" class="form-control input-sm" ng-if="!ctrl.validEntries"\n           ng-model="ctrl.model.selectEntry"></input>\n    <select ng-model="ctrl.model.selectEntry" class="form-control input-sm" ng-if="ctrl.validEntries"\n            ng-options="entry.identifier as entry.display for entry in ctrl.validEntries">\n    </select>\n\n    <button type="button" class="btn btn-danger btn-sm pull-right" ng-click="ctrl.onRemove()">\n      <i class="glyphicon glyphicon-trash"></i>\n    </button>\n  </form>\n</div>\n')}]);
angular.module("ngQuery").run(["$templateCache",function(n){n.put("js/directives/ruleGroupDirective/query-builder-view.html",'<div class="col-sm-9">\n  <rule-group query-options="ctrl.queryOptions" rules="ctrl.groups"></rule-group>\n\n  <button type="button" class="btn btn-warning" ng-click="ctrl.clearQuery()"\n          ng-disabled="ctrl.groups.length == 0">Clear Query</button>\n  <div class="btn-group pull-right" role="group">\n    <button type="button" class="btn btn-primary" ng-click="ctrl.saveQuery()"\n            ng-disabled="ctrl.groups.length == 0">Save Query</button>\n    <button type="button" class="btn btn-success"\n            ng-disabled="ctrl.groups.length == 0">Exectute Query</button>\n  </div>\n</div>\n<div class="col-sm-3">\n  <div class="panel panel-info">\n    <div class="panel-heading">\n      <h3 class="panel-title">Saved Queries</h3>\n    </div>\n    <div class="panel-body">\n      <span ng-if="ctrl.savedQueries.length == 0">Nothing Saved.</span>\n      <div ng-repeat="save in ctrl.savedQueries">\n        <button type="button" class="btn btn-default btn-sm btn-block saved-query"\n                ng-click="ctrl.restoreQuery(save.query)">\n          {{ save.name }}\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n')}]);
angular.module("ngQuery").run(["$templateCache",function(n){n.put("js/directives/ruleGroupDirective/rule-group-view.html",'<div class="rule-group-container">\n<div class="panel panel-default">\n  <div class="panel-body">\n    <div class="btn-group group-conditions" role="group">\n      <label ng-repeat="op in ctrl.queryOptions.topLevelOperators"\n             class="btn btn-xs btn-primary toggle-button"\n             ng-class="{\'active\': ctrl.selectedTopLevelOperator == op.name }">\n        <input name="{{op.name}}_cond" type="radio" value="{{op.name}}"\n               ng-click="ctrl.setTopLevelOperator(op.name)">\n          {{ op.name }}\n        </input>\n      </label>\n    </div>\n\n    <div class="btn-group pull-right group-actions">\n      <button type="button" class="btn btn-success btn-xs" ng-click="ctrl.addRule()">\n        <i class="glyphicon glyphicon-plus"></i>\n        Add Rule\n      </button>\n      <button type="button" class="btn btn-success btn-xs" ng-click="ctrl.addGroup()">\n        <i class="glyphicon glyphicon-log-in"></i>\n        Add Group\n      </button>\n      <button type="button" class="btn btn-danger btn-xs" ng-click="ctrl.onRemove()"\n              ng-show="ctrl.isNested">\n        <i class="glyphicon glyphicon-trash"></i>\n        Remove Group\n      </button>\n    </div>\n\n    <div class="rules-container" ui-sortable ng-model="ctrl.rules">\n      <div ng-repeat="rule in ctrl.rules">\n        <rule query-options="ctrl.queryOptions" query-data="rule"\n              on-remove="ctrl.removeRule(rule)" class="draggable sortable"></rule>\n      </div>\n    </div>\n  </div>\n</div>\n</div>\n')}]);
angular.module("ngQuery").run(["$templateCache",function(n){n.put("js/widgets/saveModal/save-modal.html",'<div class="modal-header">\n  <h3 class="modal-title">Give your query a name...</h3>\n</div>\n<div class="modal-body">\n  <input type="text" class="form-control" ng-model="ctrl.queryName"></input>\n</div>\n<div class="modal-footer">\n  <button class="btn btn-primary" ng-click="ctrl.save()">Save</button>\n  <button class="btn btn-warning" ng-click="ctrl.cancel()">Cancel</button>\n</div>\n')}]);