!function(){"use strict";angular.module("ngQuery",["ui.sortable","ui.bootstrap"])}(),function(){"use strict"}(),function(){"use strict";function e(e,r,t){function i(){var e=t.open({templateUrl:"js/widgets/saveModal/save-modal.html",controller:"saveModal as ctrl"});e.result.then(function(e){r.storeQuery(e,angular.copy(n.groups))},function(){})}var n=this;n.queryOptions=e.getOptions(),n.groups=[],n.savedQueries=r.getQueries(),n.clearQuery=function(){n.groups.length=0},n.saveQuery=function(){i()},n.restoreQuery=function(e){n.groups.length=0,angular.copy(e,n.groups)}}angular.module("ngQuery").controller("queryBuilder",e),e.$inject=["queryOptions","queryRepository","$modal"]}(),function(){"use strict";function e(){function e(){var e={topLevelOperators:[{name:"AND"},{name:"OR"}],fields:[{identifier:"CFirstName",display:"Contact First Name",type:"text",validOperators:[{identifier:"equals",display:"=="},{identifier:"notequal",display:"!="},{identifier:"like",display:"like"}]},{identifier:"NoHandsets",display:"Number of Handsets",type:"number",validOperators:[{identifier:"equals",display:"=="},{identifier:"notequal",display:"!="},{identifier:"greaterthan",display:">"}],validEntries:[{identifier:1,display:"1"},{identifier:2,display:"2"}]}]};return e}var r={getOptions:e};return r}angular.module("ngQuery").factory("queryOptions",e)}(),function(){"use strict";function e(){var e={getQueries:r,storeQuery:t};return e}function r(){return i}function t(e,r){i.push({name:e,query:r})}angular.module("ngQuery").factory("queryRepository",e);var i=[]}(),function(){"use strict";function e(e){var r=this;r.queryName=new Date,r.save=function(){e.close(r.queryName)},r.cancel=function(){e.dismiss("cancel")}}angular.module("ngQuery").controller("saveModal",e),e.$inject=["$modalInstance"]}(),function(){"use strict";function e(e){var r=this;r.queryOptions=e.queryOptions,r.model=e.queryData,r.onRemove=e.onRemove,r.availableOperators=[],r.validEntries=null,r.setAvailableOperators=function(){for(var e=0;e<r.queryOptions.fields.length;e++){var t=r.queryOptions.fields[e];if(t.identifier===r.model.selectedField){r.availableOperators=t.validOperators,r.validEntries=t.validEntries||null;break}}},r.setAvailableOperators(),r.isArray=angular.isArray}angular.module("ngQuery").controller("ruleDirectiveController",e),e.$inject=["$scope"]}(),function(){"use strict";function e(){return{restrict:"E",templateUrl:"js/views/query-builder-view.html",scope:{},controller:"queryBuilder as ctrl"}}angular.module("ngQuery").directive("queryBuilder",e)}(),function(){"use strict";function e(){return{restrict:"EA",templateUrl:"js/directives/ruleGroupDirective/rule-group-view.html",scope:{queryOptions:"=",rules:"=",isNested:"=",onRemove:"&"},controller:"ruleGroupDirectiveController as ctrl"}}angular.module("ngQuery").directive("ruleGroup",e)}(),function(){"use strict";function e(e){return{restrict:"EA",templateUrl:"js/directives/ruleDirective/rule-view.html",scope:{queryOptions:"=",queryData:"=",onRemove:"&"},controller:"ruleDirectiveController as ctrl",link:function(r,t){angular.isArray(r.ctrl.model)&&(t.html("<rule-group class='nested-group' query-options='ctrl.queryOptions' rules='ctrl.model' on-remove='ctrl.onRemove()' is-nested='true'></rule-group>"),e(t.contents())(r))}}}angular.module("ngQuery").directive("rule",e),e.$inject=["$compile"]}(),function(){"use strict";function e(e){var r=this;r.queryOptions=e.queryOptions,r.rules=e.rules,r.onRemove=e.onRemove,r.isNested=e.isNested,r.selectedTopLevelOperator=r.queryOptions.topLevelOperators[0].name,r.setTopLevelOperator=function(e){r.selectedTopLevelOperator=e},r.addRule=function(){r.rules.push({})},r.removeRule=function(e){var t=r.rules.indexOf(e);r.rules.splice(t,1)},r.addGroup=function(){r.rules.push([{}])},r.removeGroup=function(e){if(e){var t=r.rules.indexOf(e);r.rules.splice(t,1)}}}angular.module("ngQuery").controller("ruleGroupDirectiveController",e),e.$inject=["$scope"]}();